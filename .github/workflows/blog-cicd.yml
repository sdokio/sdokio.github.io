# 参照1：https://xirikm.net/2020/313-1
# 参照2：https://juejin.im/post/6854573218779381773
# 2022/1/13更新：
#   - https://github.com/marketplace/actions/hexo-action#example-workflow---hexo-deploy
#   - https://mark0.pw/2021/02/17/Hexo博客使用Github-Actions发布排故记录/

# 名称：自动发布 GitHub Pages
# 解释：每次 push 源码到 hexo-src 分支后，自动部署 build/deploy 到 master 分支
name: Hexo CI/CD Action for automating deployment

on:
  push:
    branches:
      - hexo-src  # 当 hexo-src 分支发生 push 事件时触发

env:
  TZ: Asia/Shanghai

jobs:
  # job 1
  build:
    name: A job to deploy blog.
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: 01.检出代码
        uses: actions/checkout@v2
        with:
          submodules: true # 检出私有的submodules（如themes等）

      # Setup Node.js environment
      - name: 02.配置 Node.js 环境
        uses: actions/setup-node@v2
        with:
          node-version: '14.18.2'

      # Cache node modules
      - name: 03.缓存依赖以加速构建（Github会移除超7天未访问的缓存）
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  # 使用 package-lock.json 文件的 hash 值来标识缓存是否需要更新
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: 04.安装依赖
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      # Install execute environment
      - name: 05.安装运行环境
        run: |
          npm install hexo-cli -g
          npm install hexo-deployer-git --save

      # Generate files
      - name: 06.编译 Markdown 文件
        run: |
          hexo clean
          hexo generate

      # Push
      - name: 07.推送
        id: deploy
        env: # 定义环境变量
          GH_REPO: github.com/sdokio/sdokio.github.io.git
        run: |
          cd ./public && git init && git add .
          git config user.name "sdokio"
          git config user.email "zdqdj@qq.com"
          git add .
          git commit -m "GitHub-Actions: Auto build at $(date +'%Y-%m-%d %H:%M:%S')"
          git push --force --quiet "https://${{ secrets.GH_ACCESS_TOKEN }}@$GH_REPO" master:master

      # Get the output
      - name: 08.获取推送的输出信息
        run: |
          echo "${{ steps.deploy.outputs.notify }}"
