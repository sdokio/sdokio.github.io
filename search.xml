<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>怎样给文件、变量和函数命名？</title>
      <link href="/2023/07/04/dev-how-to-name-better/"/>
      <url>/2023/07/04/dev-how-to-name-better/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文转载自 <a href="https://www.voidking.com/dev-how-to-name-better/" target="_blank" rel="noopener"> 怎样给文件、变量和函数命名？</a></p></blockquote><h2 id="前言"><a href="# 前言" class="headerlink" title="前言"></a>前言 </h2><p> 使用 user_tool.py 还是 user_utils.py？使用 name 还是 username？使用 user_add 还是 add_user？使用 get_user_by_name 还是 get_users_by_name？等等等等，在编程活动中，我们经常会产生各种关于命名的纠结。</p><p>给文件、函数、变量命名是一件很难的事，但是也是有方法的。本文中，我们就来学习一下文件、变量和函数命名的方法。</p><p>参考文档：</p><ul><li><a href="https://www.cnblogs.com/dolphin0520/p/10567879.html" target="_blank" rel="noopener">工程实践：给函数取一个”好”的名字</a></li><li><a href="https://github.com/zh-google-styleguide/zh-google-styleguide" target="_blank" rel="noopener">Google 开源项目风格指南 (中文版)</a></li><li><a href="https://leohxj.gitbooks.io/a-programmer-prepares/content/programmer-basic/naming.html" target="_blank" rel="noopener">命名规范</a></li></ul><h2 id="命名方法"><a href="# 命名方法" class="headerlink" title="命名方法"></a>命名方法 </h2><p> 要领：一看就懂，保持一致。</p><h2 id="文件"><a href="# 文件" class="headerlink" title="文件"></a>文件 </h2><p> 由于 Windows, OSX 下文件名不区分大小写 (linux 是区分的)，所以命名建议还是以全部小写为主。<br> 连字符可以使用中划线、下划线或者省略，关键是要统一。</p><p>目录建议连字符使用中划线，比如: my-project-name。<br>有复数的情况使用复数命名法，比如: scripts, styles, images 和 data-modules。<br>文件建议连字符使用下划线，比如：user_test.py。</p><h2 id="变量"><a href="# 变量" class="headerlink" title="变量"></a>变量 </h2><p> 变量命名常用的有两种方式:<br>下划线命名法，比如: my_variable<br>驼峰式命名法，比如: myVariale</p><p>python 语言建议使用下划线命名法。</p><h2 id="函数"><a href="# 函数" class="headerlink" title="函数"></a>函数 </h2><p> 函数命名常用的有两种方式:<br>下划线命名法，比如: get_user_by_name<br>驼峰式命名法，比如: getUserByName</p><p>python 语言建议使用下划线命名法。不同于变量命名的是，函数名称要使用动词开头，并且尽可能准确。</p><h2 id="常用动词表"><a href="# 常用动词表" class="headerlink" title="常用动词表"></a>常用动词表 </h2><p> 动词选取要精准。通常来说，动词决定了一个函数要采取什么”动作”。动词取的好，一个函数名字已经成功了 80%。</p><p>常用动词表：<br>| 类别 | 单词 |<br>| :— | :— |<br>| 添加 / 插入 / 创建 / 初始化 / 加载 | add、append、insert、create、initialize、load |<br>| 删除 / 销毁 | delete、remove、destroy、drop |<br>| 打开 / 开始 / 启动 | open、start |<br>| 关闭 / 停止 | close、stop |<br>| 获取 / 读取 / 查找 / 查询 | get、fetch、acquire、read、search、find、query |<br>| 设置 / 重置 / 放入 / 写入 / 释放 / 刷新 | set、reset、put、write、release、refresh |<br>| 发送 / 推送 | send、push |<br>| 接收 / 拉取 | receive、pull |<br>| 提交 / 撤销 / 取消 | submit、cancel |<br>| 收集 / 采集 / 选取 / 选择 | collect、pick、select |<br>| 提取 / 解析 | sub、extract、parse |<br>| 编码 / 解码 | encode、decode |<br>| 填充 / 打包 / 压缩 | fill、pack、compress |<br>| 清空 / 拆包 / 解压 | flush、clear、unpack、decompress |<br>| 增加 / 减少 | increase、decrease、reduce |<br>| 分隔 / 拼接 | split、join、concat |<br>| 过滤 / 校验 / 检测 | filter、valid、check |</p><h2 id="常用领域词"><a href="# 常用领域词" class="headerlink" title="常用领域词"></a>常用领域词 </h2><p> 名词使用领域词汇。举个例子：集合的容量通常用 capacity、集合实际元素个数用 size、字符串长度用 length，这种就遵循大家的使用习惯，不要用 size 去形如字符串的长度。</p><p>再比如，假如使用到建造者模式，那么通常会用 build 作为函数名字，这个时候就不要另辟蹊径，用 create 来作为函数名字，使用大家约定俗成的命名习惯更容易让你的代码被别人读懂。</p><p>常用名词表：<br>| 类别 | 单词 |<br>| :— | :— |<br>| 容量 / 大小 / 长度 | capacity、size、length |<br>| 实例 / 上下文 | instance、context |<br>| 配置 | config、settings |<br>| 头部 / 前面 / 前一个 / 第一个 | header、front、previous、first |<br>| 尾部 / 后面 / 后一个 / 最后一个 | tail、back、next、last |<br>| 区间 / 区域 / 某一部分 / 范围 / 规模 | range、interval、region、area、section、scope、scale |<br>| 缓存 / 缓冲 / 会话 | cache、buffer、session |<br>| 本地 / 局部 / 全局 | local、global |<br>| 成员 / 元素 | member、element |<br>| 菜单 / 列表 | menu、list |<br>| 源 / 目标 | source、destination、target |</p><h2 id="常用缩写表"><a href="# 常用缩写表" class="headerlink" title="常用缩写表"></a>常用缩写表</h2><ol><li>本缩写表是《编码命名规范》的附录。</li><li>本缩写表中列出的都是通用性缩写，不提供标准缩写，如：Win9x、COM 等。</li><li>使用本缩写表里的缩写时，请对其进行必要的注释说明。</li><li>除少数情况以外，大部分缩写与大小写无关。</li></ol><table><thead><tr><th align="left">缩写</th><th align="left">全称</th></tr></thead><tbody><tr><td align="left">addr</td><td align="left">Address</td></tr><tr><td align="left">adm</td><td align="left">Administrator</td></tr><tr><td align="left">app</td><td align="left">Application</td></tr><tr><td align="left">arg</td><td align="left">Argument</td></tr><tr><td align="left">asm</td><td align="left">assemble</td></tr><tr><td align="left">asyn</td><td align="left">asynchronization</td></tr><tr><td align="left">avg</td><td align="left">average</td></tr><tr><td align="left">DB</td><td align="left">Database</td></tr><tr><td align="left">bk</td><td align="left">back</td></tr><tr><td align="left">bmp</td><td align="left">Bitmap</td></tr><tr><td align="left">btn</td><td align="left">Button</td></tr><tr><td align="left">buf</td><td align="left">Buffer</td></tr><tr><td align="left">calc</td><td align="left">Calculate</td></tr><tr><td align="left">char</td><td align="left">Character</td></tr><tr><td align="left">chg</td><td align="left">Change</td></tr><tr><td align="left">clk</td><td align="left">Click</td></tr><tr><td align="left">clr</td><td align="left">color</td></tr><tr><td align="left">cmd</td><td align="left">Command</td></tr><tr><td align="left">cmp</td><td align="left">Compare</td></tr><tr><td align="left">col</td><td align="left">Column</td></tr><tr><td align="left">coord</td><td align="left">coordinates</td></tr><tr><td align="left">cpy</td><td align="left">copy</td></tr><tr><td align="left">ctl/ctrl</td><td align="left">Control</td></tr><tr><td align="left">cur</td><td align="left">Current</td></tr><tr><td align="left">cyl</td><td align="left">Cylinder</td></tr><tr><td align="left">dbg</td><td align="left">Debug</td></tr><tr><td align="left">dbl</td><td align="left">Double</td></tr><tr><td align="left">dec</td><td align="left">Decrease</td></tr><tr><td align="left">def</td><td align="left">default</td></tr><tr><td align="left">del</td><td align="left">Delete</td></tr><tr><td align="left">dest/dst</td><td align="left">Destination</td></tr><tr><td align="left">dev</td><td align="left">Device</td></tr><tr><td align="left">dict</td><td align="left">dictionary</td></tr><tr><td align="left">diff</td><td align="left">different</td></tr><tr><td align="left">dir</td><td align="left">directory</td></tr><tr><td align="left">disp</td><td align="left">Display</td></tr><tr><td align="left">div</td><td align="left">Divide</td></tr><tr><td align="left">dlg</td><td align="left">Dialog</td></tr><tr><td align="left">doc</td><td align="left">Document</td></tr><tr><td align="left">drv</td><td align="left">Driver</td></tr><tr><td align="left">dyna</td><td align="left">Dynamic</td></tr><tr><td align="left">env</td><td align="left">Environment</td></tr><tr><td align="left">err</td><td align="left">error</td></tr><tr><td align="left">ex/ext</td><td align="left">Extend</td></tr><tr><td align="left">exec</td><td align="left">execute</td></tr><tr><td align="left">flg</td><td align="left">flag</td></tr><tr><td align="left">frm</td><td align="left">Frame</td></tr><tr><td align="left">func/fn</td><td align="left">Function</td></tr><tr><td align="left">grp</td><td align="left">group</td></tr><tr><td align="left">horz</td><td align="left">Horizontal</td></tr><tr><td align="left">idx/ndx</td><td align="left">Index</td></tr><tr><td align="left">img</td><td align="left">Image</td></tr><tr><td align="left">impl</td><td align="left">Implement</td></tr><tr><td align="left">inc</td><td align="left">Increase</td></tr><tr><td align="left">info</td><td align="left">Information</td></tr><tr><td align="left">init</td><td align="left">Initial/Initialize/Initialization</td></tr><tr><td align="left">ins</td><td align="left">Insert</td></tr><tr><td align="left">inst</td><td align="left">Instance</td></tr><tr><td align="left">INT/intr</td><td align="left">Interrupt</td></tr><tr><td align="left">len</td><td align="left">Length</td></tr><tr><td align="left">lib</td><td align="left">Library</td></tr><tr><td align="left">lnk</td><td align="left">Link</td></tr><tr><td align="left">log</td><td align="left">logical</td></tr><tr><td align="left">lst</td><td align="left">List</td></tr><tr><td align="left">max</td><td align="left">maximum</td></tr><tr><td align="left">mem</td><td align="left">Memory</td></tr><tr><td align="left">mgr/man</td><td align="left">Manage/Manager</td></tr><tr><td align="left">mid</td><td align="left">middle</td></tr><tr><td align="left">min</td><td align="left">minimum</td></tr><tr><td align="left">msg</td><td align="left">Message</td></tr><tr><td align="left">mul</td><td align="left">Multiply</td></tr><tr><td align="left">num</td><td align="left">Number</td></tr><tr><td align="left">obj</td><td align="left">Object</td></tr><tr><td align="left">ofs</td><td align="left">Offset</td></tr><tr><td align="left">org</td><td align="left">Origin</td></tr><tr><td align="left">param</td><td align="left">Parameter</td></tr><tr><td align="left">pic</td><td align="left">picture</td></tr><tr><td align="left">pkg</td><td align="left">package</td></tr><tr><td align="left">pnt/pt</td><td align="left">Point</td></tr><tr><td align="left">pos</td><td align="left">Position</td></tr><tr><td align="left">pre/prev</td><td align="left">previous</td></tr><tr><td align="left">prg</td><td align="left">program</td></tr><tr><td align="left">prn</td><td align="left">Print</td></tr><tr><td align="left">proc</td><td align="left">Process</td></tr><tr><td align="left">prop</td><td align="left">Properties</td></tr><tr><td align="left">psw</td><td align="left">Password</td></tr><tr><td align="left">ptr</td><td align="left">Pointer</td></tr><tr><td align="left">pub</td><td align="left">Public</td></tr><tr><td align="left">rc</td><td align="left">rect</td></tr><tr><td align="left">ref</td><td align="left">Reference</td></tr><tr><td align="left">reg</td><td align="left">Register</td></tr><tr><td align="left">req</td><td align="left">request</td></tr><tr><td align="left">res</td><td align="left">Resource</td></tr><tr><td align="left">ret</td><td align="left">return</td></tr><tr><td align="left">rgn</td><td align="left">region</td></tr><tr><td align="left">scr</td><td align="left">screen</td></tr><tr><td align="left">sec</td><td align="left">Second</td></tr><tr><td align="left">seg</td><td align="left">Segment</td></tr><tr><td align="left">sel</td><td align="left">Select</td></tr><tr><td align="left">src</td><td align="left">Source</td></tr><tr><td align="left">std</td><td align="left">Standard</td></tr><tr><td align="left">stg</td><td align="left">Storage</td></tr><tr><td align="left">stm</td><td align="left">Stream</td></tr><tr><td align="left">str</td><td align="left">String</td></tr><tr><td align="left">sub</td><td align="left">Subtract</td></tr><tr><td align="left">sum</td><td align="left">summation</td></tr><tr><td align="left">svr</td><td align="left">Server</td></tr><tr><td align="left">sync</td><td align="left">Synchronization</td></tr><tr><td align="left">sys</td><td align="left">System</td></tr><tr><td align="left">tbl</td><td align="left">Table</td></tr><tr><td align="left">temp/tmp</td><td align="left">Temporary</td></tr><tr><td align="left">tran/trans</td><td align="left">translate/transation/transparent</td></tr><tr><td align="left">tst</td><td align="left">Test</td></tr><tr><td align="left">txt</td><td align="left">text</td></tr><tr><td align="left">unk</td><td align="left">Unknown</td></tr><tr><td align="left">upd</td><td align="left">Update</td></tr><tr><td align="left">upg</td><td align="left">Upgrade</td></tr><tr><td align="left">util</td><td align="left">Utility</td></tr><tr><td align="left">var</td><td align="left">Variable</td></tr><tr><td align="left">ver</td><td align="left">Version</td></tr><tr><td align="left">vert</td><td align="left">Vertical</td></tr><tr><td align="left">vir</td><td align="left">Virus</td></tr><tr><td align="left">wnd</td><td align="left">Window</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA 中 Empty、Null、Nothing 的区别</title>
      <link href="/2023/02/08/VBA-Empty%E3%80%81Nothing%E3%80%81Null%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2023/02/08/VBA-Empty%E3%80%81Nothing%E3%80%81Null%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="适用对象"><a href="# 适用对象" class="headerlink" title="适用对象"></a>适用对象 </h2><p><code>Empty</code>、<code>Null</code>、<code>Nothing</code> 是 3 种特殊值。<br>它们不可赋值给强类型对象，如：<code>Integer</code>，<code>Long</code>，<code>Single</code>，<code>Double</code>，<code>String</code>或 <code>Date</code> 等。<br>它们可以赋值给弱类型对象——变体型 <code>Variant</code>。它们只对<code>Variant</code> 变量有意义。</p><p>补充：<br>变体型 <code>Variant</code> 是一种能包含所有类型的变量，它是一种特殊的数据类型，可以赋值数值、字符串或日期数据，还赋值用户定义类型、对象（Object）和特殊类型 <code>Empty</code>、<code>Null</code> 和<code>Nothing</code>。对所有变量，如果没有明确声明它们是其它数据类型，则它们都变成 <code>Variant</code> 数据类型。</p><h2 id="Empty"><a href="#Empty" class="headerlink" title="Empty"></a>Empty</h2><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dim MyVnt As Variant</span><br></pre></td></tr></table></figure><p>MyVnt 只声明未赋值，那么其值就是 Empty（由系统自动赋予），表示 MyVnt 声明后尚未初始化（即尚未赋值）。因为 <code>Variant</code> 可以赋任意类型的值，但由于在初始化前无法确定实际的类型，因而不能给出具体的数据类型。</p><p>对于赋值为 <code>Empty</code> 的<code>Variant</code>变量，<code>Empty</code>是个有效数据（可以称为 <strong> 万能值</strong>），因为如果你认为这是数值型则值是 0，认为是字符串型则值是””（空串）。所以下列的比较判断均为真：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">If MyVnt &#x3D; 0 Then</span><br><span class="line">  Pass</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">If MyVnt &#x3D; &quot;&quot; Then</span><br><span class="line">  Pass</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">If IsEmpty(MyVnt) Then</span><br><span class="line">  Pass</span><br><span class="line">End If</span><br></pre></td></tr></table></figure><h2 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h2><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyVnt &#x3D; null</span><br></pre></td></tr></table></figure><p>如果将 <code>Null</code> 赋予 MyVnt，则表示 MyVnt 是 <strong> 无效数据 </strong>。对于值为<code>Null</code> 的变量可以通过 <code>IsNull(变量名)</code> 函数来判断。比如填写性别就是个应用场景，对于性别，有效数据只能是男或女，但没填时就是无效数据，就应该使用 <code>Null</code> 来赋值。</p><h2 id="Nothing"><a href="#Nothing" class="headerlink" title="Nothing"></a>Nothing</h2><p>声明为 <code>Variant</code> 的诸多变量中有一种叫对象变量。<code>Nothing</code>就是为对象变量赋值的，示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dim MyVnt As Variant</span><br><span class="line">Set MyVnt &#x3D; Nothing</span><br></pre></td></tr></table></figure><p>对象变量使用时会指向 / 引用一个对象，对象需要占用较大的内存资源，用完应尽快释放。将对象变量设为 <code>Nothing</code> 就是通知系统对象变量不再指向 / 引用该对象，当该对象没有被任何对象变量引用时，系统便会释放该对象所占的内存资源。</p><h2 id="总结"><a href="# 总结" class="headerlink" title="总结"></a>总结 </h2><p><code>Empty</code>、<code>Null</code> 和<code>Nothing</code>都可赋值给 <code>Variant</code> 变量，声明时系统会设 <code>Variant</code> 变量为 <code>Empty</code>；如果要将<code>Variant</code> 变量设为无效数据可用 <code>Null</code>；如果不再使用对象变量就应尽快将之设成<code>Nothing</code> 以便系统尽快释放内存资源。</p><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1] 烛光. 辨析 VBA 中的 Empty，Null 和 Nothing[EB/OL].<a href="http://www.360doc.com/content/22/0329/17/37559519_1023901524.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/22/0329/17/37559519_1023901524.shtml</a>,2022-03-29.</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA- 数据类型</title>
      <link href="/2023/02/08/VBA-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/02/08/VBA-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="基本数据类型"><a href="# 基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><ol><li><p>字符串（String）<br>必须用半角双引号。</p></li><li><p>布尔型（Boolean）<br>赋值范围：True 和 False</p></li><li><p>整数型</p><ol><li><p>字节型（Byte）<br>可理解为 Integer 的简配版，用来表示 0~255 之间的整数。声明符号为<code>$</code></p></li><li><p>整形（Integer）<br>用来表示 -32768~32768 之间的整数。声明符号为<code>%</code></p></li><li><p>长整型（Long）<br>用来表示 -2147483648~2147483647 之间的整数。声明符号为<code>&amp;</code></p></li></ol></li><li><p>浮点型</p><ol><li><p>单精度浮点数（Single）<br>一般的小数单精度够用了。声明符号为<code>!</code></p></li><li><p>双精度浮点数（Double）<br>双精度一般用于科学计算等对小数精确值很敏感的领域。声明符号为<code>#</code></p></li></ol></li><li><p>货币型（Currency）<br>（没有了解）声明符号为<code>@</code></p></li><li><p>日期型（Date）<br>含有年月日时分秒。</p></li><li><p>小数型（Decimal）<br>（没有了解）小数型数据类型只能在变体型中使用，不能声明一个变量为小数型。</p></li><li><p>对象型（Object）<br>利用 Set 语句声明为对象型的变量可以赋值为任何对象的引用。<br>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dim MyObj As Object</span><br><span class="line">Set MyObj &#x3D; xxx</span><br></pre></td></tr></table></figure></li><li><p>变体型（Variant）<br>无类型声明字符，变体型除定长字符串数据及用户定义类型外，可以包含任何类型数据，包括 Empty、Error、Nothing、Null 等特殊值，可以用 <code>VarType(变量名)</code> 函数和 <code>TypeName(变量名)</code> 函数来决定如何处理变体型中的数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dim MyName</span><br></pre></td></tr></table></figure></li></ol><p><strong>VarType()函数返回常量值</strong></p><table><thead><tr><th align="left">常量</th><th align="right">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">vbEmpty</td><td align="right">0</td><td align="left">空（未初始化）</td></tr><tr><td align="left">vbNull</td><td align="right">1</td><td align="left">Null（不是有效数据）</td></tr><tr><td align="left">vbInteger</td><td align="right">2</td><td align="left">整数</td></tr><tr><td align="left">vbLong</td><td align="right">3</td><td align="left">长整数</td></tr><tr><td align="left">vbSingle</td><td align="right">4</td><td align="left">单精度浮点数</td></tr><tr><td align="left">vbDouble</td><td align="right">5</td><td align="left">双精度浮点数</td></tr><tr><td align="left">vbCurrency</td><td align="right">6</td><td align="left">货币值</td></tr><tr><td align="left">vbDate</td><td align="right">7</td><td align="left">日期值</td></tr><tr><td align="left">vbString</td><td align="right">8</td><td align="left">字符串</td></tr><tr><td align="left">vbObject</td><td align="right">9</td><td align="left">Object</td></tr><tr><td align="left">vbError</td><td align="right">10</td><td align="left">错误值</td></tr><tr><td align="left">vbBoolean</td><td align="right">11</td><td align="left">布尔值</td></tr><tr><td align="left">vbVariant</td><td align="right">12</td><td align="left">Variant（仅与变量的数组一起使用）</td></tr><tr><td align="left">vbDataObject</td><td align="right">13</td><td align="left">数据访问对象</td></tr><tr><td align="left">vbDecimal</td><td align="right">14</td><td align="left">小数值</td></tr><tr><td align="left">vbByte</td><td align="right">17</td><td align="left">字节值</td></tr><tr><td align="left">vbLongLong</td><td align="right">20</td><td align="left">LongLong 整数 (仅在 64 位平台上有效)</td></tr><tr><td align="left">vbUserDefinedType</td><td align="right">36</td><td align="left">包含用户定义类型的变量</td></tr><tr><td align="left">vbArray</td><td align="right">8192</td><td align="left">此函数返回数组 (始终添加到另一个常量)</td></tr></tbody></table><p>注意：</p><ol><li>如果传递对象并具有默认属性， 则 VarType (对象) 返回该对象的默认属性的类型。</li><li>VarType 函数本身绝不返回 vbArray 的值。 它始终添加到其他某个值，以指示特定类型的数组。 例如，为整数数组返回的值的计算方式为 vbInteger + vbArray ，或 8194。</li><li>常量 vbVariant 仅与 vbArray 一起使用以指示 VarType 函数的参数是类型 Variant 的数组。</li></ol><p><strong>TypeName()函数返回字符串</strong></p><table><thead><tr><th align="left">返回字符串</th><th align="left">变量</th></tr></thead><tbody><tr><td align="left">objecttype</td><td align="left">对象类型</td></tr><tr><td align="left">Byte</td><td align="left">位值</td></tr><tr><td align="left">Integer</td><td align="left">整数</td></tr><tr><td align="left">Long</td><td align="left">长整数</td></tr><tr><td align="left">Single</td><td align="left">单精度浮点数</td></tr><tr><td align="left">Double</td><td align="left">双精度浮点数</td></tr><tr><td align="left">Currency</td><td align="left">货币</td></tr><tr><td align="left">Decimal</td><td align="left">十进制值</td></tr><tr><td align="left">Nothing</td><td align="left">不再引用对象的对象变量</td></tr><tr><td align="left">Date</td><td align="left">日期</td></tr><tr><td align="left">String</td><td align="left">字符串</td></tr><tr><td align="left">Error</td><td align="left">错误值</td></tr><tr><td align="left">Boolean</td><td align="left">逻辑值</td></tr><tr><td align="left">Empty</td><td align="left">未初始化</td></tr><tr><td align="left">Null</td><td align="left">无效对象</td></tr><tr><td align="left">object</td><td align="left">对象</td></tr><tr><td align="left">Unknown</td><td align="left">类型未知的对象</td></tr></tbody></table><h2 id="枚举类型"><a href="# 枚举类型" class="headerlink" title="枚举类型"></a>枚举类型 </h2><p> 当一个变量只有几种可能的值时，可以将其定义为枚举类型。枚举类型的定义需要放在模块和窗体的声明部分</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Public | Private] Enum 类型名称</span><br><span class="line">  成员 [&#x3D; 常量表达式]</span><br><span class="line">  成员 [&#x3D; 常量表达式]</span><br><span class="line">  ......</span><br><span class="line">End Enum</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#39; 定义</span><br><span class="line">Public Enum Weekdays</span><br><span class="line">  Monday</span><br><span class="line">  Tuesday</span><br><span class="line">  Wednesday</span><br><span class="line">  Thursday</span><br><span class="line">  Friday</span><br><span class="line">  Saturday</span><br><span class="line">  Sunday</span><br><span class="line">End Enum</span><br><span class="line"></span><br><span class="line">&#39; 使用</span><br><span class="line">Sub Test()</span><br><span class="line">  Dim day As Weekdays</span><br><span class="line">  day &#x3D; Monday</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h2 id="用户定义类型"><a href="# 用户定义类型" class="headerlink" title="用户定义类型"></a>用户定义类型 </h2><p> 在 VBA 中还可以使用 Type 语句来定义自己的数据类型，其格式如下：</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Type 类型名 </span><br><span class="line"> 元素名 1  AS  数据类型 1</span><br><span class="line">元素名 2  AS  数据类型 2</span><br><span class="line">...</span><br><span class="line">End Type</span><br></pre></td></tr></table></figure><p>自定义的数据类型的定义必须放在模块的声明部分中。</p><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1]L 罗乐.VBA 的数据类型[EB/OL].<a href="http://www.360doc.com/content/18/0603/19/30583536_759387607.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/18/0603/19/30583536_759387607.shtml</a>,2018-06-03.<br>[2] 凌霄百科.VBA 学习 - 语法基础[EB/OL].<a href="https://www.bilibili.com/read/cv2467437/" target="_blank" rel="noopener">https://www.bilibili.com/read/cv2467437/</a>,2019-04-16.</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梅林系统 DNS 自定义设置方法</title>
      <link href="/2023/02/05/%E6%A2%85%E6%9E%97%E7%B3%BB%E7%BB%9FDNS%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/05/%E6%A2%85%E6%9E%97%E7%B3%BB%E7%BB%9FDNS%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>输入域名 <code>lyq.com</code> 替代输入 IP<code>192.168.1.1</code>，以便记忆。</p><a id="more"></a><h2 id="用途"><a href="# 用途" class="headerlink" title="用途"></a>用途 </h2><p> 举个例子，我家有多台网络设备：</p><ul><li><p>192.168.0.1 光猫</p></li><li><p>192.168.1.1 路由器</p></li><li><p>192.168.1.2 家庭服务器</p></li><li><p>192.168.1.3 影音库</p></li></ul><p>这样每次访问都输入 IP 就有些麻烦，于是就自己解析几个域名方便点，比如将域名 <code>lyq.com</code> 解析为 <code>192.168.1.1</code>，这样下次再访问路由器时就不需要输入<code>192.168.1.1</code>，直接输入域名<code>lyq.com</code> 就可以了。</p><h2 id="步骤"><a href="# 步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>使用浏览器访问路由器管理界面并登录</p></li><li><p>系统管理 - 系统设置 - <code>Enable JFFS custom scripts and configs</code> 设置为 <code> 是</code>；<code>Enable SSH</code> 设置为<code>LAN only</code>，并点击页面下方应用本页面设置按钮</p></li><li><p>AiProtection 智能网络卫士 - DNS Filtering - <code>Enable DNS-based Filtering</code> 设置为<code>OFF</code>，并点击页面下方应用本页面设置按钮</p></li><li><p>内部网络（LAN） - DHCP 服务器 - <code>DNS Server 1</code> 设置为 <strong> 本路由器的 IP</strong>，<code>DNS Server 2</code> 留空即可，<code>Forward local domain queries to upstream DNS</code> 设置为 <code> 否</code>，并点击页面下方应用本页面设置按钮</p></li><li><p>使用 putty 等工具登录 SSH，用户名密码与登录路由器 Web 页面相同</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh admin@192.168.1.1</span><br></pre></td></tr></table></figure></li><li><p>创建自定义 DNS 配置文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /jffs/configs/dnsmasq.d/dnsmasq.conf</span><br></pre></td></tr></table></figure></li><li><p>添加需要的解析内容，规则如下：</p><ul><li><p>单域名对应单 IP 时：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">address&#x3D;&#x2F;gm.home&#x2F;192.168.0.1</span><br><span class="line">address&#x3D;&#x2F;lyq.home&#x2F;192.168.1.1</span><br><span class="line">address&#x3D;&#x2F;fwq.home&#x2F;192.168.1.2</span><br><span class="line">address&#x3D;&#x2F;yyk.home&#x2F;192.168.1.3</span><br></pre></td></tr></table></figure></li><li><p>多域名对应单 IP 时：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">address&#x3D;&#x2F;gm.home&#x2F;guangmao.home&#x2F;192.168.0.1</span><br><span class="line">address&#x3D;&#x2F;lyq.home&#x2F;luyouqi.home&#x2F;192.168.1.1</span><br><span class="line">address&#x3D;&#x2F;fwq.home&#x2F;fuwuqi.home&#x2F;192.168.1.2</span><br><span class="line">address&#x3D;&#x2F;yyk.home&#x2F;yingyinku.home&#x2F;192.168.1.3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>执行重启 DNS 服务命令后立即生效</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service restart_dnsmasq</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考内容"><a href="# 参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p>[1]K3 梅林开启自定义 DNS 功能[EB/OL].<a href="https://www.bilibili.com/video/av668028851" target="_blank" rel="noopener">https://www.bilibili.com/video/av668028851</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime 关联常见文本格式后难以通过图标分辨文件类型的应对</title>
      <link href="/2022/04/12/Sublime%E5%85%B3%E8%81%94%E5%90%8E%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87%E5%9B%BE%E6%A0%87%E5%88%86%E8%BE%A8%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%BA%94%E5%AF%B9/"/>
      <url>/2022/04/12/Sublime%E5%85%B3%E8%81%94%E5%90%8E%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87%E5%9B%BE%E6%A0%87%E5%88%86%E8%BE%A8%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%BA%94%E5%AF%B9/</url>
      
        <content type="html"><![CDATA[<p>Windows 平台，Sublime 关联常见文本格式后，所有被关联格式的文件图标都变成了 Sublime 的 Logo，导致难以通过图标分辨文件类型，这背离了文件图标分辨文件的初衷。那么如何使文件既可以用 Sublime 打开，又有清晰明了易于分辨的图标呢？今天终于决定腾出时间来应对这个问题。</p><a id="more"></a><h2 id="操作"><a href="# 操作" class="headerlink" title="操作"></a>操作 </h2><h3 id="借助程序 FileTypesMan 的实现"><a href="# 借助程序 FileTypesMan 的实现" class="headerlink" title="借助程序 FileTypesMan 的实现"></a> 借助程序 FileTypesMan 的实现 </h3><h4 id="原理"><a href="# 原理" class="headerlink" title="原理"></a> 原理</h4><p><strong><font color="#d00">2022/4/19 更新：在 Win10 上实测无效，即目前没有以知的好的方法解决这一问题</font></strong></p><p><del>「关联程序」和「打开命令」是两个不一样操作。关联到一个「关联程序」的话就会共享图标；而设置「打开命令」并不影响关联程序。所以先把所有要改的格式的 sublime 关联去掉，然后通过关联到喜欢的程序改其图标，最后把 open 命令改成 <code>sublime.exe %1</code> 就可以了。</del></p><h4 id="步骤"><a href="# 步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p><del>下载程序 <a href="https://www.nirsoft.net/utils/filetypesman.zip" target="_blank" rel="noopener">FileTypesMan</a> | <a href="https://www.nirsoft.net/utils/filetypesman-x64.zip" target="_blank" rel="noopener">FileTypesMan for x64</a> 后运行</del></p></li><li><p><del>在左侧第一列「Extension」找到对应的文件类型，或者直接输入即可快速定位，如这里找 <code>.html</code> 就输入 <code>.html</code> 即可</del></p></li><li><p><del>右键点击该行，在弹出的菜单中选择「Edit Selected File Type」或按快捷键 F2，或双击该行，打开文件类型编辑窗口</del></p></li></ol><p><img src="FileTypesMan-1.png" alt="▲ 文件类型编辑窗口"></p><ol start="4"><li><p><del>清空「User Choice」输入框中的内容后点击「OK」关闭文件类型编辑窗口</del></p></li><li><p><del>在下侧找到「open」命令的行右键单击，在弹出的菜单中选择「Edit Selected Action」或按快捷键 F3，或双击该行，打开动作编辑窗口</del></p></li></ol><p><img src="FileTypesMan-2.png" alt="▲ 动作编辑窗口"></p><ol start="6"><li><del>在「Command-Line」输入框中输入 <code>&quot;C:\Program Files\Sublime Text 3\sublime_text.exe&quot; &quot;%1&quot;</code> 后点击「OK」关闭动作编辑窗口</del></li></ol><p><img src="FileTypesMan-3.png" alt="▲ 修改 Command-Line"></p><h3 id="借助程序 Default-Programs-Editor 的实现"><a href="# 借助程序 Default-Programs-Editor 的实现" class="headerlink" title="借助程序 Default Programs Editor 的实现"></a>借助程序 Default Programs Editor 的实现</h3><ol><li><p>下载程序 <a href="https://defaultprogramseditor.com/files/DefaultProgramsEditor.zip" target="_blank" rel="noopener">Default Programs Editor</a> 后运行</p></li><li><p>点击「File Type Settings」</p></li></ol><p><img src="DefaultProgramsEditor-1.png" alt="▲ 点击「File Type Settings」"></p><ol start="3"><li>点击「Icon」</li></ol><p><img src="DefaultProgramsEditor-2.png" alt="▲ 点击「Icon」"></p><ol start="4"><li>借助右上角的检索框在下方的文件类型清单中找到对应的文件类型，单击选中</li></ol><p><img src="DefaultProgramsEditor-3.png" alt="▲ 找到目标文件类型"></p><ol start="5"><li><p>点击「Next」按钮</p></li><li><p>单击「Browse…」按钮，然后选中喜欢的图标，点击确定</p></li></ol><p><img src="DefaultProgramsEditor-4.png" alt="▲ 单击「Browse...」按钮"></p><p><img src="DefaultProgramsEditor-5.png" alt="▲ 选择喜欢的图标"></p><ol start="7"><li><p>点击右下角按钮「Save Icon」即可应用</p></li><li><p>[可选]或者也可点击’Save Icon’按钮旁的下拉三角形图标，选中「Save to .reg file…」按钮，再选择保存目录，即可得到后缀为.reg 的文件，方便传给别的电脑使用，使用时只许双击运行再点确定即可。<br>我看了下保存的.reg 文件是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">; Created with Default Programs Editor</span><br><span class="line">; http:&#x2F;&#x2F;defaultprogramseditor.com&#x2F;</span><br><span class="line"></span><br><span class="line">; Edit File Type Icon</span><br><span class="line">[HKEY_CURRENT_USER\Software\Classes\Applications\sublime_text.exe\DefaultIcon]</span><br><span class="line">@&#x3D;&quot;C:\\WINDOWS\\system32\\imageres.dll,97&quot;</span><br></pre></td></tr></table></figure><p>目测这个只是改了 Sublime 的图标，而不是我最开始希望的不同类型文件有各自不同的图标。</p></li></ol><h3 id="其它说明"><a href="# 其它说明" class="headerlink" title="其它说明"></a>其它说明 </h3><p> 通过修改注册表项 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\ Explorer\FileExts\.txt\UserChoice</code> 的项 <code>ProgId</code> 的值为想要关联程序的方式不好操作。</p><p>首先这个值的设定不是设定为完整文件名就可以的，比如 notepad 设的是 <code>txtfile</code>，我估计这是个引用值，实际值指的是<code>\HKEY_CLASSES_ROOT\txtfile</code>？纯猜测。</p><p>其次，单改了项 <code>ProgId</code> 的值还不行，它还有个校验值保存在同路径下的项 <code>Hash</code> 中，而这个 Hash 的值据说可以通过软件 <a href="https://kolbi.cz/SetUserFTA.zip" target="_blank" rel="noopener">SetUserFTA.zip</a>取得，我试了下发现并不好使。比如作者给出的将 PDF 的默认程序设为 Acrobat Reader 的命令 <code>SetUserFTA.exe .pdf AcroExch.Document.DC</code> 中，使用 <code>AcroExch.Document.DC</code> 指代 Acrobat Reader，这个映射关系我没找到，好比我拿到国民党通讯兵的电台却没有密码本，也是没法使用的。</p><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1]erikaIT.windows 注册表文件关联机制[EB/OL].<a href="https://blog.csdn.net/erikaIT/article/details/71637167" target="_blank" rel="noopener">https://blog.csdn.net/erikaIT/article/details/71637167</a>,2017-05-11.<br>[2]woshub.com.Changing Default File Associations in Windows 10 via GPO[EB/OL].<a href="http://woshub.com/managing-default-file-associations-in-windows-10/" target="_blank" rel="noopener">http://woshub.com/managing-default-file-associations-in-windows-10/</a>,2020-01-21.<br>[3]Christoph Kolbicz.SetUserFTA: UserChoice Hash defeated – Set File Type Associations per User or Group on Windows 8/10 and 2012/2016/2019[EB/OL].<a href="https://kolbi.cz/blog/2017/10/25/setuserfta-userchoice-hash-defeated-set-file-type-associations-per-user/" target="_blank" rel="noopener">https://kolbi.cz/blog/2017/10/25/setuserfta-userchoice-hash-defeated-set-file-type-associations-per-user/</a>,2017-10-25.<br>[4]Rimo.Sublime Text 3 修改配色方案和关联文件类型的图标[EB/OL].<a href="https://segmentfault.com/q/1010000000589849" target="_blank" rel="noopener">https://segmentfault.com/q/1010000000589849</a>,2017-12-23.</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime </tag>
            
            <tag> 文件格式 </tag>
            
            <tag> 文件类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗口移出屏幕后的应对</title>
      <link href="/2022/02/17/%E7%AA%97%E5%8F%A3%E7%A7%BB%E5%87%BA%E5%B1%8F%E5%B9%95%E5%90%8E%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E5%BC%8F/"/>
      <url>/2022/02/17/%E7%AA%97%E5%8F%A3%E7%A7%BB%E5%87%BA%E5%B1%8F%E5%B9%95%E5%90%8E%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p> 今天开会外接了会议室的电视作为显示器，待回到工位接上自己的显示器时发现 Chrome 的窗口能通过任务栏图标选取 / 激活，但窗口部分无法出来。</p><a id="more"></a><ol><li> 激活窗口：用组合键 <code>Alt</code> + <code>Tab</code> 切换为 Chrome 窗口 </li><li> 打开菜单：用快捷键 <code>Alt</code> + <code>Space</code> (空格键) 打开窗口菜单 </li><li> 移动模式：按 <code>M</code> (移动) 进入移动模式 </li><li> 移动窗口：直接通过上下左右移动鼠标使窗口移到可视范围，然后左键即可；或者这一步也可通过方向键 <code>↑</code>、<code>↓</code>、<code>←</code>、<code>→</code> 移动窗口到可视范围，然后回车即可 </li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>合并 B 站下载的单独视频和单独音频</title>
      <link href="/2022/02/07/%E5%90%88%E5%B9%B6B%E7%AB%99%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%8D%95%E7%8B%AC%E8%A7%86%E9%A2%91%E5%92%8C%E5%8D%95%E7%8B%AC%E9%9F%B3%E9%A2%91/"/>
      <url>/2022/02/07/%E5%90%88%E5%B9%B6B%E7%AB%99%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%8D%95%E7%8B%AC%E8%A7%86%E9%A2%91%E5%92%8C%E5%8D%95%E7%8B%AC%E9%9F%B3%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<p>好像从 2020 年开始，用 IDM 从 B 站下载视频时会出现只能分别下载独立视频和独立音频的问题，那么就需要下载后手动合并了。</p><a id="more"></a><h2 id="使用 ffmpeg 合并音视频"><a href="# 使用 ffmpeg 合并音视频" class="headerlink" title="使用 ffmpeg 合并音视频"></a>使用 ffmpeg 合并音视频 </h2><h3 id="合并单个视频"><a href="# 合并单个视频" class="headerlink" title="合并单个视频"></a> 合并单个视频 </h3><p> 命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input_video.m4s -i input_audio.m4s -codec copy output.mp4</span><br></pre></td></tr></table></figure><p>其中 <code>-i</code> 表示输入文件选项，这里因为视频和音频是相互独立的，所以用两个输入文件分别表示，没有特定顺序。<code>-codec</code> 表示输出文件编码选项，这里 <code>-codec copy</code> 表示流复制，它只是对输入文件解封装和再封装，而省略了中间的解码和编码步骤，因此速度很快且无损。</p><p>注：单独音频文件的文件名后缀可能是 <code>.mp4</code> ，单独音频文件的文件名后缀也可能是 <code>.mp4</code></p><h3 id="批量合并视频"><a href="# 批量合并视频" class="headerlink" title="批量合并视频"></a>批量合并视频 </h3><p> 批处理命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">for &#x2F;l %%i in (0,1,11) do (ffmpeg -i video%%i.m4s -i audio%%i.m4s -codec copy output%%i.mp4)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>这里假设我们在同一文件夹下有 12 个视频需要合并，且单独视频的文件名为 <code>video0.m4s</code>、<code>video1.m4s</code>、… 单独音频的文件名为 <code>audio0.m4s</code>、<code>audio1.m4s</code>、…</p><p>其中 <code>for /l</code> 表示 <code> 计数循环</code>，<code>(0,1,11)</code> 表示起始值为 0，步长为 1，中止值为 11。<code>do</code> 后把 ffmpeg 命令括起来的圆括号可省略。</p><h2 id="使用插件直接下载带音轨的视频"><a href="# 使用插件直接下载带音轨的视频" class="headerlink" title="使用插件直接下载带音轨的视频"></a>使用插件直接下载带音轨的视频 </h2><p> 这里推荐油猴插件上的脚本 <a href="https://github.com/the1812/Bilibili-Evolved" target="_blank" rel="noopener">Bilibili-Evolved</a> ，其中就有下载视频各个清晰度的功能，甚至还有下载整个系列的功能。</p><p>我已经使用了一年多的时间，各个设置选项也都详细地看了一遍。作者的定义是「 强大的哔哩哔哩增强脚本 」，个人觉得名副其实，很值得推荐。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
            <tag> Bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 后台运行程序</title>
      <link href="/2022/01/28/Linux%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
      <url>/2022/01/28/Linux%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="应用场景"><a href="# 应用场景" class="headerlink" title="应用场景"></a>应用场景 </h2><h3 id="场景一"><a href="# 场景一" class="headerlink" title="场景一"></a> 场景一 </h3><p> 服务器正在运行 Mindustry 或 Minecraft 的服务端程序，而正在游戏内游玩的我发现游戏延迟突然增高，合理怀疑是系统进程占用过高，第一反应是使用 <code>ps</code> 命令实时查看一下系统资源的占用情况。但 Mindustry 或 Minecraft 的服务端程序都是 Java 语言写的 <code>.jar</code> 程序，运行的时候需要占用控制台，怎么办，难道要中断服务器程序？</p><h3 id="场景二"><a href="# 场景二" class="headerlink" title="场景二"></a>场景二 </h3><p> 过年回到家发现一年没碰的 Ubuntu 服务器上的 Python 还是 3.6 版本，而我现在习惯使用 3.7 或 3.8 版本，那就顺便用 <code>apt-get -y update &amp;&amp; apt-get -y upgrade</code> 命令给服务器上所有程序全部升个级，说干就干，但 5min 过去了进度条还在不停地跑，正在另一台 PC 上用浏览器向 BT 下载器 Transmission 中添加种子文件的我突然发现有个种子怎么也加不进去，我的 Transmission 是安装在服务器上的，于是立马想去服务器上看看日志，但控制台被升级命令占用，需要等它先结束才能使用，急性子的我却一秒也等不下去了，怎么办，中断更新吗？</p><h2 id="应用方案"><a href="# 应用方案" class="headerlink" title="应用方案"></a>应用方案 </h2><p> 写个循环计算 100 以内所有奇数之和的例子 <code>loop.sh</code> 以备下面举例使用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">declare</span> -i i=1</span><br><span class="line"><span class="built_in">declare</span> -i sum=0</span><br><span class="line"><span class="keyword">while</span> [<span class="variable">$i</span> -le 100 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  sum=sum+<span class="variable">$i</span></span><br><span class="line">  i+=1</span><br><span class="line">  sleep 1 <span class="comment"># 为了让程序运行时间更久，每次循环睡眠 1 秒</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="方案一"><a href="# 方案一" class="headerlink" title="方案一"></a>方案一</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行，但关闭终端会停止运行</span></span><br><span class="line"><span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><p>Linux/Unix 为了实线多用户、多任务，提供了 <code>fg</code> 和 <code>bg</code> 命令，可以方便地调度正在运行的程序。当前台运行的某个程序需要一段时间才能结束，但现在需要做其他事，就可以使用 <code>Ctrl</code> + <code>Z</code> 组合键挂起这个程序。</p><p>执行 <code>./loop.sh</code> 命令运行它，再使用 <code>Ctrl</code> + <code>Z</code> 组合键挂起这个程序，这时控制台提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1]+ Stopped .&#x2F;loop.sh</span><br></pre></td></tr></table></figure><p>这时该程序就暂停了，此时利用 <code>bg</code> 命令可以使停止的程序放在后台继续运行。执行命令 <code>bg 1</code>，这时控制台提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1]+ .&#x2F;loop.sh &amp;</span><br></pre></td></tr></table></figure><p>然后就可以先去做别的事情了。如果事情做完回来该程序还没有结束，可以使用 <code>jobs</code> 命令显示当前 shell 环境中后台正在运行或者被挂起的任务信息，这时控制台提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1]+ Running .&#x2F;loop.sh &amp;</span><br></pre></td></tr></table></figure><p>如果想把它调回前端继续执行，可以使用 <code>fg 1</code> 命令，这时控制台提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\.&#x2F;loop.sh</span><br></pre></td></tr></table></figure><p>这样就可以继续等着它执行完毕了。</p><p>注意：</p><ul><li>不要后台运行需要用户交互的程序，因为用户不输入的话，程序就会一直等。</li><li>即使后台运行，带输出的程序一样会把结果输出到控制台，干扰做其它事情。那么将执行命令换成 <code>command &gt;out.file 2&gt;&amp;1 &amp;</code> 可以将全部输出结果（含标准输出和错误输出）重定向到同目录下的 <code>out.file</code> 文件中。</li></ul><h3 id="方案二"><a href="# 方案二" class="headerlink" title="方案二"></a>方案二</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行，即使关闭终端也会继续运行</span></span><br><span class="line">nohup <span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><p>如果我正在运行一个程序，并且预见即使在我退出控制台也还不会执行完毕，那么可以使用 <code>nohup</code> 命令，意思是 no hang up （不要挂起）。</p><p>还用上面 <code>loop.sh</code> 做例子，具体命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># nohup .&#x2F;loop.sh &amp;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>跟方案一不同的是，使用此命令在后台运行程序时，默认情况下所有输出结果（含标准输出和错误输出）会被重定向到同目录下的 <code>nohup.out</code> 文件中。当然也可主动指定输出文件，命令：<code>nohup command &gt; custom.file 2&gt;&amp;1</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中烟新商盟小工具</title>
      <link href="/2022/01/18/%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/01/18/%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="快速删除可用量为 0 的行"><a href="# 快速删除可用量为 0 的行" class="headerlink" title="快速删除可用量为 0 的行"></a>快速删除可用量为 0 的行 </h2><p> 为啥有这需求，很简单，因为手动删除太累了。我点一下删除按钮，页面会弹出弹窗和会自动淡出的半透明层，弹窗必须手动点确认就算了，关键是半透明层会遮挡我继续点其它的删除按钮。<br>也就是说，我要么每点一下删除就点一下确认，要么就点一下删除等 3 秒半透明层自己消失再点下一个删除按钮。<br>这怎么能忍？索性整个 JS 一次性删除吧。</p><h3 id="方法一"><a href="# 方法一" class="headerlink" title="方法一"></a>方法一 </h3><p> 原理：借助 chromium 内核浏览器提供的 xpath 插件选定删除和确定按钮，再循环点击。<br>用法：打开浏览器控制台，分两次输入 / 粘贴以下代码。<br>注意：xpath 插件是 chromium 提供的，js 本身不带这个功能，所以只保证 chromium 类浏览器有效。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第 1 步</span></span><br><span class="line"><span class="keyword">var</span> delBtns=$x(<span class="string">'//ul[@id="uladd"]/li[./span[starts-with(@id,"qty_lmt_span_") and normalize-space(text())="0"]]/span[@class="operation"]/a[@class="delCgt"]'</span>);<span class="keyword">for</span>(b <span class="keyword">of</span> delBtns)b.click();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第 2 步</span></span><br><span class="line"><span class="keyword">var</span> yesBtns=$x(<span class="string">'//p[@class="ui_p"]/input[@class="ui_button"]'</span>);<span class="keyword">for</span>(y <span class="keyword">of</span> yesBtns)y.click();</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="# 方法二" class="headerlink" title="方法二"></a>方法二 </h3><p> 原理：使用 js 选定删除和确定按钮，再循环点击。<br>用法：打开浏览器控制台，输入 / 粘贴以下代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击所有可用量为 0 的行的删除按钮</span></span><br><span class="line"><span class="keyword">var</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">'uladd'</span>).children;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = rows.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">var</span> spans = rows[i].getElementsByTagName(<span class="string">'span'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> span <span class="keyword">of</span> spans) &#123;</span><br><span class="line">        <span class="keyword">if</span> (span.id.startsWith(<span class="string">'qty_lmt'</span>) &amp;&amp; span.innerText.trim() == <span class="string">'0'</span>) &#123;</span><br><span class="line">            rows[i].getElementsByClassName(<span class="string">'operation'</span>)[<span class="number">0</span>].getElementsByClassName(<span class="string">'delCgt'</span>)[<span class="number">0</span>].click();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 隐藏黑色半透明背景</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bgs = <span class="built_in">document</span>.body.getElementsByTagName(<span class="string">'div'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> bg <span class="keyword">of</span> bgs) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bg.style.zIndex == <span class="string">'9999'</span> &amp;&amp; bg.style.opacity == <span class="string">'0.3'</span>) &#123;</span><br><span class="line">            bg.style.display = <span class="string">'none'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">100</span>);</span><br><span class="line"><span class="comment">// 隐藏弹窗</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'ui_msg'</span>);</span><br><span class="line">    <span class="keyword">for</span> (div <span class="keyword">of</span> divs) &#123;</span><br><span class="line">        div.parentNode.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">700</span>);</span><br></pre></td></tr></table></figure><h3 id="方法三"><a href="# 方法三" class="headerlink" title="方法三"></a>方法三 </h3><p> 原理：同方法二（其实代码就是方法二的代码压缩了一下）<br>用法：给浏览器添加书签，名称随便写，比如我写的是“新商盟快删”，网址填写以下代码后确认。需要使用的时候点一下这个书签即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 压缩版本</span></span><br><span class="line">javascript: <span class="keyword">var</span> rows=<span class="built_in">document</span>.getElementById(<span class="string">'uladd'</span>).children;<span class="keyword">for</span>(<span class="keyword">var</span> i=rows.length<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;<span class="keyword">var</span> spans=rows[i].getElementsByTagName(<span class="string">'span'</span>);<span class="keyword">for</span>(<span class="keyword">var</span> span <span class="keyword">of</span> spans)&#123;<span class="keyword">if</span>(span.id.startsWith(<span class="string">'qty_lmt'</span>)&amp;&amp;span.innerText.trim()==<span class="string">'0'</span>)&#123;rows[i].getElementsByClassName(<span class="string">'operation'</span>)[<span class="number">0</span>].getElementsByClassName(<span class="string">'delCgt'</span>)[<span class="number">0</span>].click()&#125;&#125;&#125;setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> bgs=<span class="built_in">document</span>.body.getElementsByTagName(<span class="string">'div'</span>);<span class="keyword">for</span>(<span class="keyword">var</span> bg <span class="keyword">of</span> bgs)&#123;<span class="keyword">if</span>(bg.style.zIndex==<span class="string">'9999'</span>&amp;&amp;bg.style.opacity==<span class="string">'0.3'</span>)&#123;bg.style.display=<span class="string">'none'</span>&#125;&#125;&#125;,<span class="number">100</span>);setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementsByClassName(<span class="string">'ui_msg'</span>);<span class="keyword">for</span>(div <span class="keyword">of</span> divs)&#123;div.parentNode.style.display=<span class="string">'none'</span>&#125;&#125;,<span class="number">700</span>);</span><br></pre></td></tr></table></figure><h2 id="快速删除可用量为 0 的行 -1"><a href="# 快速删除可用量为 0 的行 -1" class="headerlink" title="快速删除可用量为 0 的行"></a>快速删除可用量为 0 的行 </h2><p> 给自己加个 TODO 吧，每次订烟都是把收藏的烟按最大可用量预定，不需要脑袋，那还是让代码一键完成比较合适。<br>对了，经理说想要保住评级的话，最好每次的需求量是订购量的 1.5 倍。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TF 闪存卡速度参速率参数说明</title>
      <link href="/2021/01/27/TF%E9%97%AA%E5%AD%98%E5%8D%A1%E9%80%9F%E5%BA%A6%E5%8F%82%E9%80%9F%E7%8E%87%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/"/>
      <url>/2021/01/27/TF%E9%97%AA%E5%AD%98%E5%8D%A1%E9%80%9F%E5%BA%A6%E5%8F%82%E9%80%9F%E7%8E%87%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>关于 TF 卡最低写入速率的 4 种规范 / 标准的说明。</p><a id="more"></a><h2 id="SD 卡和 TF 卡"><a href="#SD 卡和 TF 卡" class="headerlink" title="SD 卡和 TF 卡"></a>SD 卡和 TF 卡 </h2><p>Secure Digital 全名为 Secure Digital Memory Card，中文直译为<code> 安全数码卡</code>，官方一般将之缩写为 SD。SD 卡的技术是建基于 MultiMediaCard 格式上。由 SD Association（SDA，SD 协会）推出。SD 卡分为 SD、miniSD、microSD 三种规范。<br><img src="sd_cards.png" alt="▲ 由上至下分别为 SD、miniSD、microSD"></p><h3 id="SD-SDHC-SDXC"><a href="#SD-SDHC-SDXC" class="headerlink" title="SD|SDHC|SDXC"></a>SD|SDHC|SDXC</h3><p>SD 协会官方定义的 3 种等级的速率标准，由于分别应用于 3 种尺寸不同的 SD 卡，故 3 种卡分别以此命名。<br>SDHC=SD High Capacity，SDXC=SD Extended Capacity</p><h3 id="历史"><a href="# 历史" class="headerlink" title="历史"></a>历史 </h3><p>microSD 卡原本称为 TF 卡（T-Flash 卡或 TransFlash），由摩托罗拉和闪迪共同研发，在 2004 年推出。不过闪迪无法自行将它推广普及化，前期仅有摩托罗拉的手机支持 TransFlash。为了能将销路完全拓展，于是闪迪将 TransFlash 规格并入 SD 协会，成为 SD 家族产品之一，造就了目前使用最广泛的手机存储卡。TF 卡重命名为 microSD 是并入 SD 协会的妥协。<br><img src="tf_card.png" alt="▲ 常见的 TF 卡"><br> 近几年 TF 卡这种历史称呼逐渐盖过 microSD 卡成为主流，可能是其名字更简短，也可能是厂商在背后发力，谁又知道呢。</p><h2 id="性能标示规范"><a href="# 性能标示规范" class="headerlink" title="性能标示规范"></a>性能标示规范 </h2><p> 常见的 TF 卡最低写入速率规范 / 标准共有 3 种，这里做个统一说明。<br><img src="card_host_marks.jpg" alt="▲ 常见 TF 卡的各种标记"></p><h3 id="Speed-Class"><a href="#Speed-Class" class="headerlink" title="Speed Class"></a>Speed Class</h3><p>SD 卡提供不同的速率，它是按 CD-ROM 的 150KB/s 为 1 倍速（记作“1x”）的速率计算方法来计算的。<br>SD2.0 的规范中对于 SD 卡的性能上分为如下若干等级：</p><ul><li>Class 0<br>包括低于 Class 2 和未标注 Speed Class 的情况；</li><li>Class 2<br>能满足观看普通 MPEG4 MPEG2 的电影、SDTV、数码摄像机拍摄；</li><li>Class 4<br>可以流畅播放高清电视（HDTV），数码相机连拍等需求；</li><li>Class 6<br>满足单反相机连拍和专业设备的使用要求；</li><li>Class 10<br>满足更高速率要求的存储需求。</li></ul><p>注：Class 等级是按 8KB/s 换算的，Class 4 最低写入速率为 4MB/s，Class 10 表示最低写入速率为 10MB/s</p><h3 id="UHS-Speed-Class"><a href="#UHS-Speed-Class" class="headerlink" title="UHS Speed Class"></a>UHS Speed Class</h3><p>UHS-1 表示支持 UHS (Ultra High Speed, 超高速)接口，其带宽达到 104MB/s。但是这个速度只代表总线规格，并不代表闪存内部速率。</p><h3 id="Video-Speed-Class"><a href="#Video-Speed-Class" class="headerlink" title="Video Speed Class"></a>Video Speed Class</h3><p>Video Speed Class 定义了录制高解析度和高画质 (4K/8K) 视频的需求，同时也具备支持下一代闪存（如 3D NAND）的重要功能。此外，Video Speed Class 也把录制 HD (2K)的视频速度整合在其中。</p><h2 id="不同速率 TF 卡的具体应用"><a href="# 不同速率 TF 卡的具体应用" class="headerlink" title="不同速率 TF 卡的具体应用"></a>不同速率 TF 卡的具体应用</h2><p><img src="video_speed_class_01.jpg" alt="▲ SD 卡速度分类"><br><img src="video_speed_class_02.jpg" alt="▲ 视频格式"></p><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1] 维基百科成员.SD 卡[EB/OL].<a href="https://zh.wikipedia.org/wiki/SD%E5%8D%A1" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/SD 卡</a>,2020-09-26.<br>[2]KevinTan9.SD 卡分类与速度等级[EB/OL].<a href="https://www.cnblogs.com/KevinTan9/p/12205668.html" target="_blank" rel="noopener">https://www.cnblogs.com/KevinTan9/p/12205668.html</a>,2020-01-17.<br>[3]Huatai Huang.SD/TF 卡速度等级[EB/OL].<a href="https://cloud-atlas.readthedocs.io/zh_CN/latest/arm/hardware/sd_tf_card_speed_class.html" target="_blank" rel="noopener">https://cloud-atlas.readthedocs.io/zh_CN/latest/arm/hardware/sd_tf_card_speed_class.html</a>,2019.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>当前运行批处理各种属性的获取</title>
      <link href="/2020/09/27/%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E6%89%B9%E5%A4%84%E7%90%86%E5%90%84%E7%A7%8D%E5%B1%9E%E6%80%A7%E7%9A%84%E8%8E%B7%E5%8F%96/"/>
      <url>/2020/09/27/%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E6%89%B9%E5%A4%84%E7%90%86%E5%90%84%E7%A7%8D%E5%B1%9E%E6%80%A7%E7%9A%84%E8%8E%B7%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<p>CMD 中 <code>%n</code> 指当前运行的批处理本身，以及后续用空格隔开的参数。那么 <code>%~dp0</code> 是什么意思？<code>%~ftza0</code>呢？本文做个小结，算作 Cheatsheet 以备不时之需。</p><a id="more"></a><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"><span class="built_in">setlocal</span> EnableDelayedExpansion</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="number">00</span>.【<span class="variable">%%c</span>d<span class="variable">%%】</span>：<span class="variable">%cd%</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="number">01</span>.【<span class="variable">%%0</span>】  ：%<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~f0 - 将 %0 扩充到一个完全合格的路径名(“f”是 file，即文件)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">02</span>.【<span class="variable">%%~</span>f0】：%~f0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~s0 - 扩充的路径只含有短名(“s”为 Short，短的)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">03</span>.【<span class="variable">%%~</span>s0】：%~s0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~d0 - 仅将 %0 扩充到一个驱动器号 (“d”为 Drive 的缩写，即为驱动器，磁盘)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">04</span>.【<span class="variable">%%~</span>d0】：%~d0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~p0 - 仅将 %0 扩充到一个路径 (“p”为 Path 缩写，即为路径，目录)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">05</span>.【<span class="variable">%%~</span>p0】：%~p0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~n0 - 仅将 %0 扩充到一个文件名(“n”是 name 文件名)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">06</span>.【<span class="variable">%%~</span>n0】：%~n0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~x0 - 仅将 %0 扩充到一个文件扩展名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">07</span>.【<span class="variable">%%~</span>x0】：%~x0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~a0 - 将 %0 扩充到文件的文件属性(“a”为 attribute，即属性)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">08</span>.【<span class="variable">%%~</span>a0】：%~a0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem 将 %0 扩充到文件的大小(Size 大小)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">09</span>.【<span class="variable">%%~</span>z0】：%~z0</span><br><span class="line"></span><br><span class="line"><span class="comment">rem %~t0 - 将 %0 扩充到文件的日期 / 时间(“t”time)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">10</span>.【<span class="variable">%%~</span>t0】：%~t0</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p><img src="001_cmd_001.png" alt="▲ 执行截图"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMD </tag>
            
            <tag> 批处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo：Markdown 简明语法手册</title>
      <link href="/2020/09/04/Hexo%EF%BC%9AMarkdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/"/>
      <url>/2020/09/04/Hexo%EF%BC%9AMarkdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p>Markdown 语法简明便捷，既弥补了传统纯文本缺少样式的不足，又降低了传统 Word、HTML 等样式文本的技术门槛，自 2004 年被 John Gruber 创造以来，得到一定范围的传播和使用。2012 年 Github 强势崛起，并官方推荐 Markdown 格式，这几年得以广泛传播，甚至衍生出了林林总总数十种版本 / 变体。不过，今天我只谈 Hexo 相关内容，Hexo 默认自带的 Markdown 渲染器为<code>hexo-renderer-marked</code>，本文就是对其支持语法的一个总结。</p><p>由于暂时用不上数学公式，本文 <strong> 不包含 </strong><code>LaTeX 公式</code> 相关语法。</p><h2 id="分级标题"><a href="# 分级标题" class="headerlink" title="分级标题"></a>分级标题 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># &#123; 一级标题 &#125;</span><br><span class="line">## &#123; 二级标题 &#125;</span><br><span class="line">### &#123; 三级标题 &#125;</span><br><span class="line">#### &#123; 四级标题 &#125;</span><br><span class="line">##### &#123; 五级标题 &#125;</span><br><span class="line">###### &#123; 六级标题 &#125;</span><br></pre></td></tr></table></figure><p>以 <code>#</code> 开头，以标题内容结尾，中间填充至少一个<code>Space</code>。标题共有 6 级。一级标题和二级标题也可以使用如下语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; 一级标题 &#125;</span><br><span class="line">&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; 二级标题 &#125;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 中华人民共和国</span><br><span class="line">## 湖北省</span><br><span class="line">### 武汉市</span><br><span class="line">#### 武昌区</span><br><span class="line">##### 徐东街道</span><br><span class="line">###### 群星城社区</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="001_fenjibiaoti_001.png" alt="▲ 分级标题 示例截图"></p><h2 id="层级列表"><a href="# 层级列表" class="headerlink" title="层级列表"></a>层级列表 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 一级目录名称 &#125;</span><br><span class="line">  * &#123; 二级目录名称 &#125;</span><br><span class="line">    * &#123; 三级目录名称 &#125;</span><br><span class="line">      * &#123; 四级目录名称 &#125;</span><br><span class="line">        * &#123; 五级目录名称 &#125;</span><br><span class="line">          ...</span><br></pre></td></tr></table></figure><p>层级列表每下一级的缩进都要比上一级多 2 个 <code>Space</code> 或 1 个<code>Tab</code>，且第一级前面不可超过 3 个空格。层级列表一般仅用一、二、三级列表，第一级的标识为实心圆点，第二级的标识为空心圆点，第三级的标识为实心方点。不过理论上可以有无数层级，但从第三级开始层级标识均为实心方点。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 文档</span><br><span class="line">  * 什么是 Hexo</span><br><span class="line">  * 安装</span><br><span class="line">    * 安装前提</span><br><span class="line">      * 安装 Git</span><br><span class="line">        * Git 注意事项</span><br><span class="line">      * 安装 Node.js</span><br><span class="line">      * 安装 Hexo</span><br><span class="line">  * 使用</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="002_cengjiliebiao_001.png" alt="▲ 层级列表 示例截图"></p><h2 id="斜体 - 粗体 - 删除线 - 高亮"><a href="# 斜体 - 粗体 - 删除线 - 高亮" class="headerlink" title="斜体 / 粗体 / 删除线 / 高亮"></a>斜体 / 粗体 / 删除线 / 高亮 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*&#123; 斜体内容 &#125;*</span><br><span class="line">**&#123; 粗体内容 &#125;**</span><br><span class="line">~&#123; 删除内容 &#125;~</span><br><span class="line">&#96;&#123; 高亮内容 &#125;&#96;</span><br><span class="line">&lt;u&gt;&#123; 高亮内容 &#125;&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">他望车外看了看，说：*“我买几个橘子去。你就在此地，不要走动。”*</span><br><span class="line">他望车外看了看，说：**“我买几个橘子去。你就在此地，不要走动。”**</span><br><span class="line">他望车外看了看，说：~“我买几个橘子去。你就在此地，不要走动。”~</span><br><span class="line">他望车外看了看，说：&#96;“我买几个橘子去。你就在此地，不要走动。”&#96;</span><br><span class="line">他望车外看了看，说：&lt;u&gt;“我买几个橘子去。你就在此地，不要走动。”&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><p><strong>效果 </strong><br><img src="003_xieticutishanchuxiangaoliang_001.png" alt="▲ 斜体 / 粗体 / 删除线 / 高亮 示例截图"><br><font color=#aaaaaa size=2> 按说斜体和粗斜体是两码事，后者需要嵌套，但这里兴许是我这套主题的缘故，斜体自动加粗了。</font></p><h2 id="引用"><a href="# 引用" class="headerlink" title="引用"></a>引用 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; &#123; 引用内容 &#125;</span><br><span class="line">&gt;&gt; &#123; 嵌套引用内容 &#125;</span><br><span class="line">&gt;&gt;&gt; &#123; 再次嵌套引用内容 &#125;</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 他望车外看了看，说：“我买几个橘子去。你就在此地，不要走动。”</span><br><span class="line">&gt;&gt; 他望车外看了看，说：“我买几个橘子去。你就在此地，不要走动。”</span><br><span class="line">&gt;&gt;&gt; 他望车外看了看，说：“我买几个橘子去。你就在此地，不要走动。”</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="004_yinyong_001.png" alt="▲ 引用 示例截图"></p><h2 id="列表"><a href="# 列表" class="headerlink" title="列表"></a>列表 </h2><h3 id="无序列表"><a href="# 无序列表" class="headerlink" title="无序列表"></a> 无序列表 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 列表 1 内容 &#125;</span><br><span class="line">* &#123; 列表 2 内容 &#125;</span><br><span class="line">* &#123; 列表 3 内容 &#125;</span><br></pre></td></tr></table></figure><p>以 <code>*</code> 或<code>+</code>或 <code>-</code> 开头，以列表内容结尾，中间填充至少一个<code>Space</code>。标识为实心圆点。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BAT 指：</span><br><span class="line">* Baidu</span><br><span class="line">* Alibaba</span><br><span class="line">* Tencent</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="005_liebiao_001.png" alt="▲ 无序列表 示例截图"></p><h3 id="有序列表"><a href="# 有序列表" class="headerlink" title="有序列表"></a>有序列表 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &#123; 列表内容 1&#125;</span><br><span class="line">1. &#123; 列表内容 2&#125;</span><br><span class="line">1. &#123; 列表内容 3&#125;</span><br></pre></td></tr></table></figure><p>全部使用 <code>1.</code>，会自增。也可使用<code>1.</code>、<code>2.</code>、<code>3.</code> 这样手动指定序号。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">洗手步骤：</span><br><span class="line">1. 用干净自来水（温水或冷水）润湿双手，关掉水龙头，涂抹肥皂。</span><br><span class="line">1. 将您的手和肥皂揉搓在一起，让它起泡沫。趁着肥皂起沫时揉搓手背、手指间和指甲下。</span><br><span class="line">1. 擦洗双手至少 20 秒。</span><br><span class="line">  * 需要定时吗？ 大概是将“生日快乐”歌从头到尾哼唱两遍的时间。</span><br><span class="line">  * 时间不足 20 秒可以吗？建议 20 秒以上。</span><br><span class="line">1. 顺着干净自来水洗净双手。</span><br><span class="line">1. 用干净毛巾擦干双手或直接风干。</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="005_liebiao_002.png" alt="▲ 有序列表 示例截图"></p><h3 id="任务列表"><a href="# 任务列表" class="headerlink" title="任务列表"></a>任务列表 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><figcaption><span>注意：由于代码块内的中括号里的空格不知何因会被自动删除，这里用下划线表示空格。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [_] &#123;（未完成）任务名称 &#125;</span><br><span class="line">- [x] &#123;（已完成）任务名称 &#125;</span><br></pre></td></tr></table></figure><p>任务框需要配合有序或无序列表使用，故列入列表章节。中括号 <code>[]</code> 表复选框。若表示 <strong> 未完成 </strong> 则<code>[</code>和 <code>]</code> 之间必须有且仅有一个 <code>Space</code>，若表示<strong> 完成 </strong> 则<code>[</code>和 <code>]</code> 之间输入一个字母 <code>x</code>。右中括号<code>]</code> 和<code>任务名称 </code> 之间至少有一个<code>Space</code>。</p><p><strong>示例</strong></p><figure class="highlight plain"><figcaption><span>注意：由于代码块内的中括号里的空格不知何因会被自动删除，这里用下划线表示空格。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- [_] 跑步</span><br><span class="line">- [_] 骑车</span><br><span class="line">- [x] 吃饭</span><br><span class="line">- [_] 睡觉</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="005_liebiao_003.png" alt="▲ 任务列表 示例截图"></p><h2 id="图片 - 音频 - 视频"><a href="# 图片 - 音频 - 视频" class="headerlink" title="图片 / 音频 / 视频"></a>图片 / 音频 / 视频 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![&#123; 链接文本 &#125;](&#123; 链接 &#125; &#123;title 内容 &#125;)</span><br></pre></td></tr></table></figure><p>静态图、动态图、视频和音频都是一样的引用方式，只是音频没写样式很丑。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![](006_tupianyinpinshipin_001.png)</span><br><span class="line">![](006_tupianyinpinshipin_002.gif)</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="006_tupianyinpinshipin_001.png" alt="▲ 静态图 示例截图"><br><img src="006_tupianyinpinshipin_002.gif" alt="▲ 动态图 示例动图"></p><h2 id="超链接"><a href="# 超链接" class="headerlink" title="超链接"></a>超链接 </h2><h3 id="行内式"><a href="# 行内式" class="headerlink" title="行内式"></a> 行内式 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123; 链接文本 &#125;](&#123; 链接 &#125; &#123;title 内容 &#125;)</span><br></pre></td></tr></table></figure><p><code>[]</code>里为链接文字。<code>()</code>里前者为链接地址，后者为链接的 title 属性（链接的 title 属性：鼠标悬停在链接上时浮现的悬浮框的内容），后者非必须。链接地址和链接的 title 属性之间需至少有一个<code>Space</code>。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[百度](http:&#x2F;&#x2F;www.baidu.com)</span><br><span class="line">[百度](http:&#x2F;&#x2F;www.baidu.com &quot; 百度一下，你就知道 &quot;)</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="007_chaolianjie_001.gif" alt="▲ 超链接 示例动图"></p><h3 id="自动连接"><a href="# 自动连接" class="headerlink" title="自动连接"></a>自动连接 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&#123; 链接或 Email&#125;&gt;</span><br></pre></td></tr></table></figure><p>直接在 <code>&lt;&gt;</code> 之间输入链接或 Email。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;http:&#x2F;&#x2F;www.baidu.com&#x2F;&gt;</span><br><span class="line">&lt;admin@baidu.com&gt;</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="007_chaolianjie_002.png" alt="▲ 超链接 示例截图"></p><h2 id="锚点"><a href="# 锚点" class="headerlink" title="锚点"></a>锚点 </h2><p> 网页中，锚点其实就是 <strong> 页内超链接 </strong>，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我在本节的标题写下一个锚点，在目录中写下对应链接，点击链接就能跳过来。<br><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#123; 链接文字 &#125;](#&#123;index&#125;)</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;&#123;index&#125;&quot;&gt;&#123; 标题 &#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>跟超链接同理，只是链接地址改为锚点元素的 <code>id</code> 属性值。标题可省。<br><font color=#aaaaaa size=2>注意：<code>div</code>只是这里演示，任何 HTML 元素均可。</font></p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[第一句](#41)，[第二句](#42)，[第三句](#43)</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;41&quot;&gt;&lt;&#x2F;div&gt; 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">&lt;div id&#x3D;&quot;42&quot;&gt;&lt;&#x2F;div&gt; 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">&lt;div id&#x3D;&quot;43&quot;&gt;&lt;&#x2F;div&gt; 我轻轻的招手， 作别西天的云彩。</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="008_maodian_001.gif" alt="▲ 锚点 示例动图"></p><h2 id="表格"><a href="# 表格" class="headerlink" title="表格"></a>表格 </h2><h3 id="符号写法"><a href="# 符号写法" class="headerlink" title="符号写法"></a> 符号写法 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|&#123; 表头 1&#125;|&#123; 表头 2&#125;|&#123; 表头 3&#125;|</span><br><span class="line">|-|-|-|</span><br><span class="line">|&#123; 内容 1-1&#125;|&#123; 内容 1-2&#125;|&#123; 内容 1-3&#125;|</span><br><span class="line">|&#123; 内容 2-1&#125;|&#123; 内容 2-2&#125;|&#123; 内容 2-3&#125;|</span><br><span class="line">|&#123; 内容 3-1&#125;|&#123; 内容 3-2&#125;|&#123; 内容 3-3&#125;|</span><br></pre></td></tr></table></figure><p><code>|</code>控制分列，<code>-</code>控制分行，<code>:</code>控制对齐方式。<br>第一行为 <code> 表头行 </code>，使用竖线符将各表头隔开，此外最前和最后表头两侧分别有个竖线符将整体框起来。<br><font color=#aaaaaa size=2> 注意：表格 <strong> 首行的前一行 </strong> 必须 <strong> 留空 </strong>，否则符号写法的表格无法生效。</font><br> 第二行为 <code> 控制行 </code>，要求竖线符的数量和表头行一致，且每个竖线之间至少有一个中划线符。<br> 第三行及以下为 <code> 数据行 </code>，要求竖线符的数量和表头行一致，每两个相邻的竖线符之间是表格数据。<br> 表格默认左对齐。在第二行可以使用<code>:</code>（冒号）搭配中划线符主动控制对应列内容的对齐方式。两个竖线符之间为：</p><ul><li><code>:-</code>：表示左对齐</li><li><code>-</code>或<code>:-:</code>：表示中对齐</li><li><code>-:</code>：表示右对齐</li></ul><p><font color=#aaaaaa size=2>注意：无论是否主动控制对齐方式，控制行的每一列都至少要有一个中划线符。</font></p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 名字 | 性别 | 年龄 | 部门 |</span><br><span class="line">|-|-|-:|-|</span><br><span class="line">| 张三 | 男 |21| 产品 |</span><br><span class="line">| 李四 | 女 |18| 开发 |</span><br><span class="line">| 王二 | 男 |20| 销售 |</span><br></pre></td></tr></table></figure><p><strong>效果 </strong><br><img src="009_biaoge_001.png" alt="▲ 表格 - 符号写法 示例截图"><br><font color=#aaaaaa size=2> 注意：此处截图表格风格样式与 Hexo 默认格式不同，这取决于 Hexo 的主题。</font></p><h3 id="HTML 写法"><a href="#HTML 写法" class="headerlink" title="HTML 写法"></a>HTML 写法 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;&#123; 表头 1&#125;&lt;&#x2F;th&gt;</span><br><span class="line">      &lt;th&gt;&#123; 表头 2&#125;&lt;&#x2F;th&gt;</span><br><span class="line">      &lt;th&gt;&#123; 表头 3&#125;&lt;&#x2F;th&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">  &lt;&#x2F;thead&gt;</span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 1-1&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 1-2&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 1-3&#125;&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 2-1&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 2-2&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 2-3&#125;&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 3-1&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 3-2&#125;&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt;&#123; 内容 3-3&#125;&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">  &lt;&#x2F;tbody&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure><p>Markdown 中的表格还可以用 HTML 标签的形式来写。跟 <em>符号写法 </em> 最大的区别主要是 <em>HTML 写法</em> 虽然无法控制整列的对齐方式，但可以单独控制每个单元格的对齐方式。控制对齐方式的方式是给需要控制元素添加<code>align</code> 标签，例：</p><ul><li><code>&lt;th align=&quot;middle&quot;&gt;</code></li><li><code>&lt;td align=&quot;left&quot;&gt;</code></li><li><code>&lt;td align=&quot;right&quot;&gt;</code></li></ul><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt; 名字 &lt;&#x2F;th&gt;</span><br><span class="line">      &lt;th&gt; 性别 &lt;&#x2F;th&gt;</span><br><span class="line">      &lt;th&gt; 年龄 &lt;&#x2F;th&gt;</span><br><span class="line">      &lt;th&gt; 部门 &lt;&#x2F;th&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">  &lt;&#x2F;thead&gt;</span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt; 张三 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 男 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td align&#x3D;&quot;right&quot;&gt;21&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 产品 &lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt; 李四 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 女 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td align&#x3D;&quot;right&quot;&gt;18&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 开发 &lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt; 王二 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 男 &lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td align&#x3D;&quot;right&quot;&gt;20&lt;&#x2F;td&gt;</span><br><span class="line">      &lt;td&gt; 销售 &lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">  &lt;&#x2F;tbody&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure><p><strong>效果 </strong><br><img src="009_biaoge_002.png" alt="▲ 表格 - HTML 写法 示例截图"><br><font color=#aaaaaa size=2> 注意：此处截图表格风格样式与 Hexo 默认格式不同，这取决于 Hexo 的主题。</font></p><h2 id="注释"><a href="# 注释" class="headerlink" title="注释"></a>注释 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#123; 注释内容 &#125;</span><br></pre></td></tr></table></figure><p>反斜杠后不加空格紧跟注释内容即可注释。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\## 我不再是标题</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="010_zhushi_001.png" alt="▲ 表格 - HTML 写法 示例截图"></p><h2 id="分割线"><a href="# 分割线" class="headerlink" title="分割线"></a>分割线 </h2><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">___</span><br><span class="line">***</span><br></pre></td></tr></table></figure><p>在一行起始使用 <code>***</code> 或 <code>---</code> 或 <code>___</code> 表示分割线。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">下面有条分割线 </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"> 上下各有一条分割线 </span><br><span class="line">___</span><br><span class="line"> 上下各有一条分割线</span><br><span class="line">***</span><br></pre></td></tr></table></figure><p><font color=#aaaaaa size=2>注意：由于 <code>---</code> 还用于二级标题，因而在使用这种方式表分割线时，其前一行必须留空。</font></p><p><strong>效果</strong><br><img src="011_fengexian_001.png" alt="▲ 分割线 示例截图"></p><h2 id="代码块"><a href="# 代码块" class="headerlink" title="代码块"></a>代码块 </h2><h3 id="行内代码块"><a href="# 行内代码块" class="headerlink" title="行内代码块"></a> 行内代码块 </h3><p><strong> 语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#123; 代码部分 &#125;&#96;</span><br></pre></td></tr></table></figure><p>使用 <code>`</code>（重音符）框起来的部分为代码块。<br><font color=#aaaaaa size=2> 重音符：半角状态下，<strong>按住 </strong><code>Shift</code> 键，同时按下键盘字母区域的数字 1 的左侧相邻按键，输出符号即为重音符。</font><br>由于重音符是个特殊的控制字符，代码块内 <strong> 原样输出 </strong> 重音符（两个重音符中间输入重音符）无法直接实现，但可通过其它方式实现，分以下几种情况：</p><ul><li>如果两个重音符中间的内容除了包含重音符还 <strong> 含有其它内容</strong>，则在最外层需要用两个连续重音符夹起来。</li><li>如果两个重音符中间的内容 <strong> 只包含重音符</strong>，没有其它内容，则分以下情况：<ul><li>如果两个重音符中间的重音符 <strong> 只有一个</strong>，则除了用两个连续重音符夹起来以外，作为内容的这一个重音符两侧必须至少各有一个空格。</li><li>如果两个重音符中间的重音符 <strong> 只有两个</strong>，分两种情况：<ul><li>两个重音符 <strong> 连续</strong>，我还没有找到办法原样输出这两个重音符。</li><li>两个重音符 <strong> 不连续</strong>（即两个重音符之间有空格），则将作为内容的两个重音符看做一个整体，这个整体的两侧必须至少各有一个空格。</li></ul></li><li>如果两个重音符中间的重音符有 <strong> 两个以上</strong>，则除了用两个连续重音符夹起来以外，将作为内容的多个重音符看做一个整体，这个整体的两侧必须至少各有一个空格。</li></ul></li></ul><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">今天我们来了解一下 &#96;Java&#96; 的语法规则。</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="012_daimakuai_001.png" alt="▲ 行内代码块 示例截图"></p><h3 id="多行代码块"><a href="# 多行代码块" class="headerlink" title="多行代码块"></a>多行代码块 </h3><p><strong> 语法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">' &#123;type&#125; &#123;explain&#125;</span></span><br><span class="line"><span class="string">int i = 1;</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br></pre></td></tr></table></figure><p><font color=#aaaaaa size=2>注意：由于多行代码块的特殊性，无法在代码块内输入三个连续的重音符，这里用 <strong> 单引号代表重音符 </strong>。</font><br> 在代码的前后各起一行，只输入连续的三个重音符即可表示代码块。在第一行的三个重音符后空一格可指定 <strong> 代码语言 </strong>（可选），不区分大小写。再空一格可指定<strong> 代码块标题</strong>（可选），可用单引号 / 双引号括起来，不括也行。</p><p><strong>示例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;&#39; java 如何在 Java 中声明变量</span><br><span class="line">int i &#x3D; 1;</span><br><span class="line">&#39;&#39;&#39;</span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="012_daimakuai_002.png" alt="▲ 多行代码块 示例截图"></p><h2 id="特殊转义字符"><a href="# 特殊转义字符" class="headerlink" title="特殊转义字符"></a>特殊转义字符 </h2><p> 在编写 Markdown 时，想要原样输出一些控制字符就需要先对其 <strong> 转义</strong>，通常的做法是在待转义字符前添加反斜杠符<code>\</code>，但有时这种方法会失效（具体哪些清空未有总结），稳定原样输出的方式是直接使用特殊字符的编码，对应如下：</p><p><strong>常用 HTML 特殊字符编码对照表</strong></p><table><thead><tr><th align="center">特殊符号</th><th>命名实体</th><th>十进制编码</th><th>中文名称</th><th>英文名称</th></tr></thead><tbody><tr><td align="center">&#45;</td><td>&amp;minus;</td><td>&amp;#45;</td><td>减号</td><td>Minus sign</td></tr><tr><td align="center">&#33;</td><td>无</td><td>&amp;#33;</td><td>惊叹号</td><td>Exclamation mark</td></tr><tr><td align="center">&#34;</td><td>&amp;quot;</td><td>&amp;#34;</td><td>双引号</td><td>Quotation mark</td></tr><tr><td align="center">&#35;</td><td>无</td><td>&amp;#35;</td><td>数字标志</td><td>Number sign</td></tr><tr><td align="center">&#36;</td><td>无</td><td>&amp;#36;</td><td>美元标志</td><td>Dollar sign</td></tr><tr><td align="center">&#37;</td><td>无</td><td>&amp;#37;</td><td>百分号</td><td>Percent sign</td></tr><tr><td align="center">&#38;</td><td>&amp;amp;</td><td>&amp;#38;</td><td>地址符</td><td>Ampersand</td></tr><tr><td align="center">&#39;</td><td>无</td><td>&amp;#39;</td><td>单引号</td><td>Apostrophe</td></tr><tr><td align="center">&#40;</td><td>无</td><td>&amp;#40;</td><td>左小括号</td><td>Left parenthesis</td></tr><tr><td align="center">&#41;</td><td>无</td><td>&amp;#41;</td><td>右小括号</td><td>Right parenthesis</td></tr><tr><td align="center">&#42;</td><td>无</td><td>&amp;#42;</td><td>星号</td><td>Asterisk</td></tr><tr><td align="center">&#43;</td><td>无</td><td>&amp;#43;</td><td>加号</td><td>Plus sign</td></tr><tr><td align="center">&#47;</td><td>无</td><td>&amp;#47;</td><td>斜杠</td><td>Slash</td></tr><tr><td align="center">&#60;</td><td>&amp;lt;</td><td>&amp;#60;</td><td>小于号</td><td>Less than</td></tr><tr><td align="center">&#61;</td><td>无</td><td>&amp;#61;</td><td>等号</td><td>Equals sign</td></tr><tr><td align="center">&#62;</td><td>&amp;gt;</td><td>&amp;#62;</td><td>大于号</td><td>Greater than</td></tr><tr><td align="center">&#63;</td><td>无</td><td>&amp;#63;</td><td>问号</td><td>Question mark</td></tr><tr><td align="center">&#64;</td><td>无</td><td>&amp;#64;</td><td>at 符</td><td>Commercial at</td></tr><tr><td align="center">&#91;</td><td>无</td><td>&amp;#91;</td><td>左中括号</td><td>Left square bracket</td></tr><tr><td align="center">&#92;</td><td>无</td><td>&amp;#92;</td><td>反斜杠</td><td>Reverse solidus (backslash)</td></tr><tr><td align="center">&#93;</td><td>无</td><td>&amp;#93;</td><td>右中括号</td><td>Right square bracket</td></tr><tr><td align="center">&#123;</td><td>无</td><td>&amp;#123;</td><td>左大括号</td><td>Left curly brace</td></tr><tr><td align="center">&#124;</td><td>无</td><td>&amp;#124;</td><td>竖线</td><td>Vertical bar</td></tr><tr><td align="center">&#125;</td><td>无</td><td>&amp;#125;</td><td>右大括号</td><td>Right curly brace</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo：搭建博客</title>
      <link href="/2020/09/02/Hexo%EF%BC%9A%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/09/02/Hexo%EF%BC%9A%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>记录从在 Github 建立 repository 开始，到博客部署的博客建站过程。本文还包含博文版本控制、多端协作、自动部署等内容。</p><a id="more"></a><h2 id="目标及思路"><a href="# 目标及思路" class="headerlink" title="目标及思路"></a>目标及思路 </h2><p> 本文有如下几个目标：</p><ul><li>建立本地博客</li><li>部署博客到 GitHub Pages</li><li>对博文源文件进行版本控制</li><li>持续集成 / 持续部署</li></ul><p>前两条很容易理解，写博客当然是希望能发布在互联网上广而告之，选 <code>GitHub Pages</code> 是因为它有微软背书，可靠性上应该没啥问题。那一个小小博客又不是什么大项目，为何要版本控制呢？</p><p>早期的 Hexo 建博教程中，大多是使用 <code>Hexo 工作文件</code> 在本地生成 Web 文件后将其上传到 <code>GitHub Pages</code> 进行部署。这里有个问题，万一本地电脑遗失，或遭遇磁盘损坏等不可抗力因素导致 <code>Hexo 工作文件</code> 丢失，那想要继续更新博客就得重建之前的<code>Hexo 工作文件</code>，光想想就是一件很麻烦的事。所以，发布的 Web 文件可以不用版本控制，但<code>Hexo 工作文件</code>（含 Hexo 环境和博文源文件）就得版本控制以备万一之需了。</p><p>至于最后一条目标，接触过持续集成 / 持续部署的朋友可能很好理解，这又是一项偷懒罢了。每次通过 Hexo 将博文源文件生成 Web 文件后还得上传到 GitHub Pages 才算发布成功，这样究竟太过麻烦，而使用持续集成 / 持续部署后，我只负责上传保存博文源文件，剩下的编译、生成、打包、上传、发布，全部让 <code>GitHub Actions</code> 替我完成，它不香吗？</p><h2 id="建立本地博客"><a href="# 建立本地博客" class="headerlink" title="建立本地博客"></a>建立本地博客</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）渲染文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p><font color=#aaaaaa size=2>注：若要执行 Hexo 命令需先安装 Git 和 Node.js 环境，可参考 <a href="https://hexo.io/zh-cn/docs/# 安装" target="_blank" rel="noopener">Hexo 官方文档</a></font></p><h3 id="安装 Hexo"><a href="# 安装 Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="未完待续…（可是不想写了，之后如果有这个闲情再说吧）"><a href="# 未完待续…（可是不想写了，之后如果有这个闲情再说吧）" class="headerlink" title="未完待续…（可是不想写了，之后如果有这个闲情再说吧）"></a>未完待续…（可是不想写了，之后如果有这个闲情再说吧）</h1><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1]silaoA.hexo+github pages 搭建博客站全过程记录[EB/OL].<a href="https://silaoa.github.io/2019/2019-04-18-hexo-github-pages 建博客站全过程记录.html" target="_blank" rel="noopener">https://silaoa.github.io/2019/2019-04-18-hexo-github-pages 建博客站全过程记录.html</a>,2019-04-18.<br>[2]yifanzheng. 使用 GitHub Actions 自动部署 Hexo 博客到 GitHub Pages[EB/OL].<a href="https://juejin.im/post/6854573218779381773" target="_blank" rel="noopener">https://juejin.im/post/6854573218779381773</a>,2020-07-25.<br>[3]Hexo 官方.Hexo 官方文档[EB/OL].<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a>,2020-08-31.</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日本地区区划概述</title>
      <link href="/2020/08/28/%E6%97%A5%E6%9C%AC%E5%9C%B0%E5%8C%BA%E5%8C%BA%E5%88%92%E6%A6%82%E8%BF%B0/"/>
      <url>/2020/08/28/%E6%97%A5%E6%9C%AC%E5%9C%B0%E5%8C%BA%E5%8C%BA%E5%88%92%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>文章转载自 <a href="http://jpmetro.com/picture/basic-introduction-of-japan.html" target="_blank" rel="noopener"> 日本地铁 </a>，少量改动，若有冒犯，请及时<a href="mailto://zdqdj@qq.com"> 联系我 </a> 删除。</p></blockquote><p>日本是一个由 6852 个岛屿组成的岛国，面积约 37.8 万平方公里，排名世界第 62 位。人口 1.26 亿，居世界第 11 位。日本全国共划分为由都道府县组成的 47 个一级行政区。本文将通过一组地图和照片带你快速的对日本有一个粗略的认知。</p><h2 id="四大本岛"><a href="# 四大本岛" class="headerlink" title="四大本岛"></a>四大本岛 </h2><p> 日本全国共有 6852 个岛屿，占据绝大多数土地和人口的是四大本岛。对于非日本当地的居民来说，一般较为熟悉的是根据地理上的概念，将日本列岛分为本州、北海道、九州和四国（有时也将四大本岛及琉球群岛合称五大本岛）。<br><img src="001_sidabendao_001.png" alt="▲ 四大本岛"></p><h3 id="本州"><a href="# 本州" class="headerlink" title="本州"></a>本州 </h3><p> 本州以约 60% 的土地面积，聚集了日本超过 80% 的人口，是日本面积最大也是人口最多的岛屿。本州岛古称秋津岛或秋津洲，现名「本州」意思是主要的岛屿。本州岛拥有日本的象征，同时也是日本第一高峰的富士山。<br><img src="001_sidabendao_002.jpg" alt="▲ 从富士市看日本最高峰 —— 富士山"></p><h3 id="北海道"><a href="# 北海道" class="headerlink" title="北海道"></a>北海道 </h3><p> 北海道是日本第二大岛，同时也是日本 47 个「都道府县」中唯一的「道」。北海道古称虾夷，明治维新后参考日本古时的东海道、西海道、南海道的划分，更名为北海道。地广人稀的北海道是日本重要的粮食产区，与本州岛之间有青函隧道相连。<br><img src="001_sidabendao_003.jpg" alt="▲ 北海道十胜平原农场"></p><h3 id="九州"><a href="# 九州" class="headerlink" title="九州"></a>九州 </h3><p> 九州古称筑紫岛或筑紫洲，是日本第三大岛。狭义的九州仅指九州本岛，不过一般统计上也包括冲绳诸岛。通过多条海底隧道和跨海大桥与本州岛相连。<br><img src="001_sidabendao_004.jpg" alt="▲ 九州高千穗峡谷"></p><h3 id="四国"><a href="# 四国" class="headerlink" title="四国"></a>四国 </h3><p> 四国岛是日本列岛中面积最小人口也最少的岛，古称伊予之二名岛或伊予二名洲。古代四国岛分属南海道中的赞岐国、阿波国、土佐国、伊予国，故而得名四国。与本州岛之间有三条跨海大桥相连。<br><img src="001_sidabendao_005.jpg" alt="▲ 四国岛最南端的足折岬"></p><h2 id="八大地区"><a href="# 八大地区" class="headerlink" title="八大地区"></a>八大地区 </h2><p> 对于日本当地居民来说，较常使用一被称为 <code> 八地方区分 </code> 的划分概念，依照各地因历史、文化、经济发展、交通建设等的不同而逐渐形成的当地居民意识，将日本全国划分为北海道、东北、关东、中部、近畿、中国、九州、四国 8 个 <code> 地方</code>。除北海道、九州与四国之外，其余五大地区均是本州岛的部分区域。八大地区中人口最多的是关东、中部和近畿，这三大地区也是首都圈、中京圈和近畿圈所在之地，同时也是日本最重要的政治、经济与文化中心。<br><img src="002_badadiqu_001.png" alt="▲ “八地方区分”简图"><br><img src="002_badadiqu_002.png" alt="▲ “八地方区分”地理图"></p><h3 id="北海道 -1"><a href="# 北海道 -1" class="headerlink" title="北海道"></a>北海道 </h3><p> 北海道于明治维新后被完全纳入日本治下，不同于日本其他一级行政区，北海道在其下的市区町村（日本最基础的行政区）之上另设了 14 个振兴局。北海道全境 36% 的人口集中在札幌市，同时札幌市也是北海道的经济中心。<br><img src="002_badadiqu_003.jpg" alt="▲ 札幌市大通公园"></p><h3 id="东北"><a href="# 东北" class="headerlink" title="东北"></a>东北 </h3><p> 东北地区古称奥羽，因位于本州岛的东北部而得名。陆地面积占本州岛的 30% 左右，从北至南包括青森、秋田、岩手、山形、宫城和福岛六县。经济中心是位于宫城县的仙台市。<br><img src="002_badadiqu_004.jpg" alt="▲ 仙台市中心夜景"></p><h3 id="关东"><a href="# 关东" class="headerlink" title="关东"></a>关东 </h3><p> 公元 672 年 <strong> 壬申之乱 </strong> 之后，日本天武天皇在东山道、东海道与北陆道分别设置了不破、铃鹿与爱发三个关卡用以拱卫京畿地区。从此之后，这三关两侧区域分别被习惯性的称之为关东与关西。今天的关东地区包括东京都以及群马、栃木、琦玉、茨城、千叶和神奈川六县。以东京都会区为核心的首都圈人口超过 3700 万，是日本的政治、经济与文化中心，同时也是世界上最大的都市圈。<br><img src="002_badadiqu_005.jpg" alt="▲ 从天空树俯看东京"><br><img src="002_badadiqu_006.jpg" alt="▲ 东京千代田区秋叶原"><br><img src="002_badadiqu_007.jpg" alt="▲ 东京新宿区夜晚的歌舞伎町一番街"></p><h3 id="中部"><a href="# 中部" class="headerlink" title="中部"></a>中部 </h3><p> 中部地区因位于本州岛中部而得名。包括山梨、长野、新潟、岐阜、静冈、爱知、富山、石川和福井九县。中部地区是串联东日本与西日本的重要经济、交通走廊，位于爱知县的名古屋市是中部地区最大的都市与经济中心，同时也是仅次于东京与大阪的日本第三大都市。<br><img src="002_badadiqu_008.jpg" alt="▲ 名古屋市中心"></p><h3 id="近畿"><a href="# 近畿" class="headerlink" title="近畿"></a>近畿 </h3><p> 自公元 794 年日本桓武天皇迁都到京都（平安京）开始，直到明治维新前，京都都是日本的首都。环绕京都的大片区域也被称之为京畿地区，即使在东京成为日本首都之后，这个俗称也未曾改变，同时这也是近畿地区得名的由来。由京都与大阪二府以及滋贺、兵库、奈良、和歌山与三重五县组成的近畿地区是日本仅次于关东地区的第二大都市圈与经济圈。大阪市是近畿地区最大的都市与重要的经济、文化中心。<br><img src="002_badadiqu_009.jpg" alt="▲ 大阪城与其后的高层建筑群"><br><img src="002_badadiqu_010.jpg" alt="▲ 京都三大祭之一的祇园祭"></p><h3 id="中国"><a href="# 中国" class="headerlink" title="中国"></a>中国 </h3><p> 中国地区指本州岛西部的鸟取、岛根、冈山、广岛与山口五县。这个说法源自平安时代，当时日本根据距离首都京都的远近程度，将全国划分为“近国”、“中国”与“远国”，其中的“中国”就是今天日本的中国地区。广岛市是该地区的经济中心与最大的都市。<br><img src="002_badadiqu_011.jpg" alt="▲ 广岛城以及周边区域"></p><h3 id="九州 -1"><a href="# 九州 -1" class="headerlink" title="九州"></a>九州 </h3><p> 九州共有 8 个县，包括九州本岛的大分、宫崎、福冈、佐贺、长崎、熊本和鹿儿岛 7 县以及琉球群岛上的冲绳县。最大的都市是拥有 158 万人口的福冈市，同时福冈市也是福冈县县厅所在地。<br><img src="002_badadiqu_012.jpg" alt="▲ 福冈市海滨百道填海开发区"></p><h3 id="四国 -1"><a href="# 四国 -1" class="headerlink" title="四国"></a>四国 </h3><p> 四国共有香川、德岛、高知和爱媛四县。香川县县厅所在地高松市因为距离本州岛较近，一直是四国对外联系的门户，日本中央政府机关和各大企业也大多将四国地区分支结构设在高松市。不过四国地区人口最多的都市则是爱媛县县厅所在地松山市。<br><img src="002_badadiqu_013.jpg" alt="▲ 高松市以及濑户内海"></p><h2 id="四十七都道府县"><a href="# 四十七都道府县" class="headerlink" title="四十七都道府县"></a>四十七都道府县 </h2><p> 日本明治维新之后于 1871 年进行了 <strong> 废藩置县 </strong> 改革，将原江户时代的各藩主领地直接变更为由中央政府直辖的 302 个县，同时还增设了东京、京都和大阪 3 府。这是日本历史上县级行政单位最多的一个时期，不过仅仅过了不到半年时间，日本就于 1872 年进行了第一次府县调整，将全国 302 个县缩减为 72 个县。其后日本又经历了若干次府县调整，县数减少到 40 左右。</p><p>随着 1886 年日本设立北海道厅并将北海道纳入治下之后，日本全国变成了 3 府 41 县 1 厅的局面。之后奈良县与香川县分别于 1887 年和 1888 年设立，至此形成了日本延续至今的 43 县格局。其后东京府于 1943 年变更为东京都，北海道于 1946 年由厅变道，正式形成了日本今天的都道府县格局。</p><p>二战后冲绳处于美国治下，日本一度变成了 1 都 1 道 2 府 42 县。随着冲绳于 1972 年复归，日本<strong>1 都 1 道 2 府 43 县</strong>（1 都 1 道 2 府为东京都、北海道、大阪府、京都府）的格局延续至今，未再发生过变更。<br><img src="003_dudaofuxian_001.png" alt="▲ 日本 1 都 1 道 2 府区划"><br><img src="003_dudaofuxian_002.png" alt="▲ 日本全部 47 个一级行政区（都道府县）区划"><br><img src="003_dudaofuxian_003.png" alt="▲ 日本全部 47 个一级行政区（都道府县）区划"></p><p>日本每一个都道府县都有独一无二的标识。下图是按照从北海道、东北、关东、中部、近畿、中国、四国与九州顺序排列的各县（都道府）标识。<br><img src="003_dudaofuxian_004.png" alt="▲ 日本各都道府县标识"></p><h2 id="冷知识"><a href="# 冷知识" class="headerlink" title="冷知识"></a>冷知识</h2><ul><li>日本是一个四面环海的岛国，不过日本仍然有栃木、群马、琦玉、长野、岐阜、山梨、滋贺与奈良 8 个内陆县。</li><li>东京都市圈面积很大，但是东京都本身的面积在日本 47 个都道府县中排名倒数第三，同时冲绳也不是面积最小的县，日本面积最小的县是四国的香川县。</li><li>中国地区的人口近乎是四国地区的两倍，但是日本人口最少的两个县都来自中国地区，分别是岛根县和鸟取县。<br><img src="004_lengzhishi_001.png" alt=""></li></ul><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1] 瓦叔. 一组简图，带你快速了解日本 [EB/OL].<a href="http://jpmetro.com/picture/basic-introduction-of-japan.html" target="_blank" rel="noopener">http://jpmetro.com/picture/basic-introduction-of-japan.html</a>,2019-01-14.<br>[2] 维基百科. 日本地理分区 [EB/OL].<a href="https://zh.wikipedia.org/wiki/ 日本地理分区" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/ 日本地理分区</a>,2019-03-10.<br>[3] ウィキペディア. 日本の地域[EB/OL].<a href="https://ja.wikipedia.org/wiki/ 日本の地域" target="_blank" rel="noopener">https://ja.wikipedia.org/wiki/ 日本の地域</a>,2020-08-05.</p>]]></content>
      
      
      <categories>
          
          <category> 认识世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本 </tag>
            
            <tag> 区划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo：多媒体的引用</title>
      <link href="/2020/08/21/Hexo%EF%BC%9A%E5%A4%9A%E5%AA%92%E4%BD%93%E7%9A%84%E5%BC%95%E7%94%A8/"/>
      <url>/2020/08/21/Hexo%EF%BC%9A%E5%A4%9A%E5%AA%92%E4%BD%93%E7%9A%84%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>在写文章时，插入图片，音频和视频能令文章通俗易懂，生动形象。为满足 Hexo 作文时的插图片 / 音频 / 视频需求，在网上查阅后整理归纳得到此文。</p><a id="more"></a><h2 id="图片引用"><a href="# 图片引用" class="headerlink" title="图片引用"></a>图片引用 </h2><p> 根据图片类型可分为静态图和动态图，据我试验两者语法通用，故不单独列出动态图的引用。也可根据图片存储位置分为本地引用和外链引用。</p><h3 id="本地图片引用"><a href="# 本地图片引用" class="headerlink" title="本地图片引用"></a>本地图片引用 </h3><h4 id="绝对路径"><a href="# 绝对路径" class="headerlink" title="绝对路径"></a> 绝对路径 </h4><p> 引用绝对路径时将 <code>{hexo-root}/source/</code> 当作绝对路径的跟目录。建议在 source 目录下新建一个专门用作存储图片的目录（如本例中为 images)，用以保持 source 目录的整洁。<br>引用绝对路径的图片既 <strong> 可以在博客首页的文章预览中正常显示 </strong><sup>*</sup>，也<strong> 可以在文章正文中正常显示 </strong>。<br><font color=#aaaaaa size=2> 注：文章摘要中有图片或虽未设摘要但文章第一段含有图片时，博客首页的文章预览中会展示图片。</font></p><figure class="highlight md"><figcaption><span>&#123;hexo-root&#125;/source/images/absolute_image_name.jpg</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">description of this image</span>](<span class="link">/images/absolute_image_name.jpg</span>)</span><br></pre></td></tr></table></figure><h4 id="相对路径"><a href="# 相对路径" class="headerlink" title="相对路径"></a>相对路径 </h4><p> 图片除了可以统一放在 <code>{hexo-root}/source/</code> 目录中，还可以放在文章自己的目录中。要使用这一功能，需要先修改博客配置文件。<br>打开博客配置文件 <code>{hexo-root}/_config.yml</code>，找到<code>post_asset_folder</code> 选项并改为 <code>true</code> 以启用该功能。</p><figure class="highlight md"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post<span class="emphasis">_asset_</span>folder: true</span><br></pre></td></tr></table></figure><p>然后在命令行执行下列命令生成文章：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new test_article</span><br></pre></td></tr></table></figure><p>命令执行成功后，在 <code>{hexo-root}/source/_posts/</code> 目录中就生成了文章文件 <code>test_article.md</code> 和同名目录 <code>test_article</code>，随后将待引用图片放在<code>test_article</code> 目录中，就可以在文章中使用相对路径引用图片资源了。</p><figure class="highlight md"><figcaption><span>&#123;hexo-root&#125;/source/_posts/test_article/relative_image_name.jpg</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">description of this image</span>](<span class="link">relative_image_name.jpg</span>)</span><br></pre></td></tr></table></figure><p>但值得注意的是，使用相对路径引用时，图片虽然可以在文章正文中正常显示，但 <strong> 无法 </strong> 在博客首页的文章预览中正常显示。<br><img src="001_image_001.png" alt="▲ 使用相对路径引用的图片无法在博客首页的文章预览中正常显示"></p><p>如果希望图片在文章正文和博客首页的文章预览中均可正常显示，就必须放弃 Markdown 通用的引用方式，改用 Hexo 标签插件的专用语法。示例如下：</p><figure class="highlight"><figcaption><span>&#123;hexo-root&#125;/source/_posts/test_article/relative_image_name.png</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img relative_image_name.png 'description of this image' %&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>asset_img</code> 为固定语法，后两者分别为图片文件名和图片描述（可省略）。</p><h3 id="外链图片引用"><a href="# 外链图片引用" class="headerlink" title="外链图片引用"></a>外链图片引用 </h3><p> 除了在本地存储图片，还可以将图片上传到一些图床中，服务商不仅支持图片外联，还提供 CDN 服务，以便于图片在全球各处均可高效访问。<br>在图床中上传图片后，会生成对应的 URL 地址，使用 Markdown 语法引用图片即可。</p><p>免费图床推荐：</p><ul><li><a href="https://cloudinary.com/" target="_blank" rel="noopener">Cloudinary</a><sup>*</sup></li><li><a href="https://imgchr.com/" target="_blank" rel="noopener">路过图床 </a><br><font color=#aaaaaa size=2> 注：Cloudinary 的官网国内访问不畅（但外链图片访问正常）；官网全英文界面</font></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![Cloudinary- 外链引用示例图片](https:&#x2F;&#x2F;res.cloudinary.com&#x2F;sdokio&#x2F;image&#x2F;upload&#x2F;v1598942738&#x2F;example_image.png)</span><br><span class="line">![路过图床 - 外链引用示例图片](https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2020&#x2F;09&#x2F;01&#x2F;dvRirT.png)</span><br></pre></td></tr></table></figure><h2 id="音频引用"><a href="# 音频引用" class="headerlink" title="音频引用"></a>音频引用 </h2><p> 音频引用分为本地引用和外链引用。本地引用没有音乐播放器的话会比较丑，自建播放器的话可参考 <a href="https://blog.hgtweb.com/2019/musicplayer/" target="_blank" rel="noopener"> 用 CSS 和 JS 实现的简易的音乐播放器</a>。外链引用的话，平台很多，比如音乐类有网易、QQ、虾米等，电子书有蜻蜓 FM、喜马拉雅、荔枝等。</p><p>各个平台大同小异，本文采用网易云音乐举例。</p><p>进入歌曲《梦中的婚礼》的页面，点击生成外链播放器。<br><img src="002_audio_001.png" alt="▲ 网易云音乐的“生成外链播放器”选项"></p><p>外链播放器有些自定义选项可供用户选择，修改选项后可实时查看预览。插件类型有 iframe 和 flash，考虑到 Adobe 已放弃 flash，即将停止技术支持，建议选择前者。尺寸也有两种样式可选，前者很是常见，后者更简洁尺寸更小。最后还有是否自动播放的选项，我取消了，防止打扰用户。以上自定义选项若有改动，会自动反应在下文的 HTML 代码中，故无需手动生成，直接复制 HTML 代码即可。<br><img src="002_audio_002.png" alt="▲ 复制外链播放器的代码"></p><p>将外链播放器的 HTML 代码粘贴到 Markdown 中，保存后启动服务器即可查看预览效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;330 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;5264717&amp;auto&#x3D;0&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=5264717&auto=0&height=66"></iframe><h2 id="视频引用"><a href="# 视频引用" class="headerlink" title="视频引用"></a>视频引用 </h2><p> 类似音频，视频同样分为本地引用和外链引用。前者很丑，此处略过不提。后者的话也有很多平台选择，如优爱腾，各个平台大同小异，本文选择 B 站举例。</p><p>进入计划引用视频的页面，找到分享按钮，复制其中 HTML 代码。<br><img src="003_video_001.png" alt="▲ 复制外链播放器的代码"><br>将外链播放器的 HTML 代码粘贴到 Markdown 中，保存后启动服务器即可查看预览效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;39807850&amp;bvid&#x3D;BV1Vt411z7Nt&amp;cid&#x3D;69927212&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?aid=39807850&bvid=BV1Vt411z7Nt&cid=69927212&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><p>算是能看，但是太小观看不便，且未置中并不美观，据说移动端还无法自适应，参考 <a href="https://zhuanlan.zhihu.com/p/104996801" target="_blank" rel="noopener">hexo 博客插入图片与视频方法</a> 修改代码后完美解决。</p><figure class="highlight plain"><figcaption><span>在移动端也可自适应的视频引用方式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;</span><br><span class="line">    &lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;39807850&amp;cid&#x3D;69927212&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot; style&#x3D;&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=39807850&cid=69927212&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1]Yan Yinhong.Hexo 博客搭建之在文章中插入图片[EB/OL].<a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/</a>,2017-05-02.<br>[2]Super 苏志高.hexo 博客插入图片与视频方法[EB/OL].<a href="https://zhuanlan.zhihu.com/p/104996801" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/104996801</a>,2020-02-04.<br>[3]Hexo 官方.Hexo 官方文档[EB/OL].<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a>,2020-08-31.<br>[4] 疾风_KANA.markdown 如何嵌入视频、音频[EB/OL].<a href="https://www.jianshu.com/p/3525536f9dcd" target="_blank" rel="noopener">https://www.jianshu.com/p/3525536f9dcd</a>,2019-10-01.</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>何谓左右</title>
      <link href="/2020/08/21/%E4%BD%95%E8%B0%93%E5%B7%A6%E5%8F%B3/"/>
      <url>/2020/08/21/%E4%BD%95%E8%B0%93%E5%B7%A6%E5%8F%B3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>文章整理自相关 <a href="https://www.zhihu.com/question/26385415" target="_blank" rel="noopener"> 知乎话题</a>。</p></blockquote><h3 id="左右的由来"><a href="# 左右的由来" class="headerlink" title="左右的由来"></a>左右的由来 </h3><p> 左和右是法国大革命后议会为了计票方便，保皇派坐在右边，进步派坐在左边。从这点来说，其实现在所有的人在政治上基本上都是“左”派，除非你支持君主专制或者帝制。一般简单的来说“左”代表 <strong> 进步主义，就是要激进的社会变革，社会越平等平均越好 </strong>；右就是保守派，社会传统派，<strong> 提倡遵从社会传统，循序渐进的进步，尊重自然形成的贫富差距和一定程度的不平等，反对激进的运动 </strong>。经济上左派看中<strong> 二次分配，缩小贫富差距，把蛋糕切得均匀 </strong>；右派在经济上主张<strong> 放松管制，刺激经济，把蛋糕做大</strong>。</p><p><img src="000_heweizuoyou_001.jpg" alt="▲ 图文无关"></p><h3 id="左和右是一个相对的概念"><a href="# 左和右是一个相对的概念" class="headerlink" title="左和右是一个相对的概念"></a>左和右是一个相对的概念 </h3><p> 左和右是一个相对的概念。</p><p>在马哲中，有 <strong> 认识 </strong> 和<strong>实践 </strong> 这一对辩证关系，实践是认识的来源，认识是实践的动力。而人们对客观世界的认识实践过程是：<strong>认识 -&gt; 实践 -&gt; 再认识 -&gt; 再实践 -&gt;…以此越来越接近真理 </strong>。另外，生产力决定生产关系，经济基础决定上层建筑，对于国家发展最重要的是<strong> 生产力适应生产关系的发展</strong>。</p><p>而左和右全都忽视了这些原则，左指 <strong> 认识过于超越实践的发展 </strong>，表现为<strong> 对生产关系的估计大大超过了生产力的发展 </strong>。举个例子，在我国新民主主义革命时期，左表现为反帝反封<strong> 又反资</strong>，左倾错误者高估了生产力的发展，认识太过超前，认为在半封建半殖民地的社会可以直接进行社会主义革命（与新民主主义革命根本区别是是否反资）。</p><p>相对的，右指 <strong> 认识过于落后于生产力的发展（客观条件）</strong>，认为在革命过程中必须依赖资产阶级，且得先建立资产阶级共和国几十年不变，再考虑社会主义的事情。比如陈独秀的右倾投降主义。</p><p>以上这些都是在社会意识形态层面。</p><p>而在生活中，可以认为左指认识远远超过实践，一般和空想，不切实际挂钩，比如瑞典的环保小将，经济发展条件达不到的情况下强行环保，比如比如我国可以不经初级阶段过渡直接到共产主义社会。</p><p>在生活中可以认为右指的是认识落后于实践，比如印度在对外开放过程中忐忑不安，搞个事情遮遮掩掩。</p><p>此外，再强调一下，左右是个相对概念的问题，我国的右有可能在其他国家就是左，比较的时候着眼点在于，两个观点哪个更超前于实际，哪个就是相对左。举个例子，太平天国相比洋务运动是左，戊戌变法相比洋务运动是左。</p><h3 id="系统讲左右"><a href="# 系统讲左右" class="headerlink" title="系统讲左右"></a>系统讲左右 </h3><h4 id="左右派"><a href="# 左右派" class="headerlink" title="左右派"></a> 左右派 </h4><p> 左派是指走社会主义道路的人，右派是指走自由资本主义道路的人。是政治观点上完全对立的两个派别。</p><h4 id="左右倾"><a href="# 左右倾" class="headerlink" title="左右倾"></a>左右倾 </h4><p> 同样是主张实现社会主义目标的，因为对现实的认识不一致，因此就产生了对采取何种措施的分歧。一方面，无论左倾右倾，都属于左派，属于认识上产生了偏差；另一方面，无论左倾右倾，都会给社会主义革命和建设事业带来危害，因此就需要即防“左”又防右，这里的“左”是指左派内部的左倾，右指的是左派内部的右倾。左倾和右倾是同一政治立场上对现实情况认识的错误造成的。左倾指过于激进的做法，右倾是过于落后保守的做法。左右倾都是社会主义道路的阻碍，都是在社会主义发展道路上应避免的。例如，我国社会主义进程中曾有过的“大跃进”，就是左倾思想引起的，导致发展落后的做法。对于左倾和右倾，不是要打倒，因为只是思想认知上的错误，只要纠正就可以了。</p><h4 id="左右翼"><a href="# 左右翼" class="headerlink" title="左右翼"></a>左右翼 </h4><p> 左翼、右翼一般指资产阶级内部的两种思想，是右派词典中的概念。左翼、右翼都是右派。资产阶级与客观上为资产阶级服务的资产阶级知识分子内部，有些人或政党强调社会公平和社会福利，提倡革除一些资本主义的弊端，进行一些改良，其政策主张客观上能够给工人阶级带来实惠，能够缓和资产阶级与工人阶级矛盾，一般称这些人为资产阶级左翼（或曰右派中的左翼），这样的政党如社会民主党为资产阶级的左翼政。而有些人或政党强调自然竞争，以竞争促进社会发展，削减社会福利，更多地要求维护传统的资本主义自由经济，坚持顽固的自由市场经济理论，反对对资本主义进行改良，因此其主张就必然更多地代表大资产阶级的利益，一般称其为资产阶级右翼。美国的民主党和共和党分别指的就是资本主义左翼和右翼。</p><h3 id="总结"><a href="# 总结" class="headerlink" title="总结"></a>总结 </h3><p> 左重公平、重集体；右偏效率、偏个人。<br>左是指的 <strong>“大政府、公共主义的、追求公平、劫富济贫”</strong>，具有<strong> 理想主义色彩 </strong>，而右是指的<strong>“个人主义、自由民、小政府、市场经济、竞争”</strong>，是一种<strong> 现实保守主义色彩</strong>。</p><h3 id="举例"><a href="# 举例" class="headerlink" title="举例"></a>举例 </h3><p> 社会主义的左是斯大林 <br> 社会主义的中间路线是改革开放 <br> 社会主义的右是戈尔巴乔夫 <br> 资本主义的左是胡佛 <br> 资本主义的中间路线是罗斯福新政 <br> 资本主义的右是希特勒</p><h3 id="称呼问题"><a href="# 称呼问题" class="headerlink" title="称呼问题"></a>称呼问题 </h3><p> 另外讲一讲称呼问题，非共产党的左右称为：左派、右派；共产党的左右称为：左倾、右倾。</p>]]></content>
      
      
      <categories>
          
          <category> 政史 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 左派 </tag>
            
            <tag> 右派 </tag>
            
            <tag> 左翼 </tag>
            
            <tag> 右翼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用软件列表</title>
      <link href="/2020/07/15/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8/"/>
      <url>/2020/07/15/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>总是这样那样的原因给这台那台电脑装系统，别人的还好说，就是强迫症的自己最难伺候，总是想要非常齐全，故列出常用软件。<br>但实际上这种完美主义问题很大，容易随时演变为形式主义和虎头蛇尾的结果。</p><a id="more"></a><h2 id="办公软件"><a href="# 办公软件" class="headerlink" title="办公软件"></a>办公软件</h2><ol><li>Windows Office</li><li>Chrome</li><li>Lingoes</li><li>FSCapture</li><li>7-Zip</li><li>V2Ray</li></ol><h2 id="多媒体"><a href="# 多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><ol><li>PotPlayer</li><li>Vieas</li><li>Gaaiho Reader</li><li>GifCam</li></ol><h2 id="编程开发"><a href="# 编程开发" class="headerlink" title="编程开发"></a>编程开发</h2><h3 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h3><pre><code>1. Eclipse1. IntelliJ IDEA1. Visual Studio</code></pre><h3 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h3><pre><code>1. JDK</code></pre><h3 id="文本处理"><a href="# 文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><pre><code>1. Sublime Text1. VSCode1. Beyond Compare1. Notepad++1. EmEditor1. Sakura</code></pre><h3 id="版本控制"><a href="# 版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><pre><code>1. Github Desktop1. Maven1. TortoiseSVN</code></pre><h3 id="数据库"><a href="# 数据库" class="headerlink" title="数据库"></a>数据库</h3><pre><code>1. Navicat1. A5M2</code></pre><h3 id="Web 容器"><a href="#Web 容器" class="headerlink" title="Web 容器"></a>Web 容器 </h3><pre><code>1. Tomcat</code></pre><h3 id="通信"><a href="# 通信" class="headerlink" title="通信"></a> 通信</h3><pre><code>1. Cmder1. Postman1. Nmap1. RDCMan1. Fiddler1. WinSCP</code></pre><h3 id="字体"><a href="# 字体" class="headerlink" title="字体"></a>字体 </h3><pre><code>1. YaHei Consolas Hybrid</code></pre><h2 id="其它"><a href="# 其它" class="headerlink" title="其它"></a> 其它</h2><ol><li>Everything</li><li>MouseJiggler</li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Tips </tag>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动 Windows 系统用户文件夹</title>
      <link href="/2020/07/15/%E7%A7%BB%E5%8A%A8Windows%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2020/07/15/%E7%A7%BB%E5%8A%A8Windows%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<p>将 Windows 系统默认的用户文件夹（C:\Users）移动到指定位置，本文选择移动到 D 盘。</p><blockquote><p>用户文件夹主要上缓存类文件，如下载、文档、音乐、图片、视频等</p></blockquote><h2 id="优势"><a href="# 优势" class="headerlink" title="优势"></a>优势</h2><ol><li>防止系统盘损坏后用户文件丢失</li><li>避免备份系统时系统不够“纯净”</li><li>越来越多的用户文件可能导致系统盘容量不足</li></ol><h2 id="原理"><a href="# 原理" class="headerlink" title="原理"></a>原理 </h2><p> 将原文件（夹）移到指定位置，再在原位置类似 Linux 一样创建一个软连接链接到指定位置 <br> 注意：指定位置所在磁盘的 <strong> 文件系统类型必须是 NTFS</strong></p><h2 id="实操（分 3 种情形）"><a href="# 实操（分 3 种情形）" class="headerlink" title="实操（分 3 种情形）"></a>实操（分 3 种情形）</h2><h3 id="1- 新系统正在安装时"><a href="#1- 新系统正在安装时" class="headerlink" title="1. 新系统正在安装时"></a>1. 新系统正在安装时 </h3><p> 在安装 Win7/Win10 的过程中，要求输入用户名及密码的时候，先不如输入任何信息，按 <code>Shift</code> + <code>F10</code> 打开 DOS 窗口(命令行窗口)，执行以下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 复制 C:\Users 下所有文件 (包含子文件夹) 到 D:\Users</span><br><span class="line">robocopy "C:\Users" "D:\Users" /E /COPYALL /XJ</span><br><span class="line">## 删除 C:\Users 文件夹 </span><br><span class="line"><span class="built_in">rmdir</span> "C:\Users" /S /Q </span><br><span class="line">## 创建 (目录) 软连接 C:\Users 指向 D:\Users</span><br><span class="line">mklink /J "C:\Users" "D:\Users"</span><br></pre></td></tr></table></figure><p>然后关闭 DOS 窗口，按正常流程继续安装 Windows 直至完成。如此安装的 Windows 所有“用户文件夹”(User Special Folder)的内容都已经被设置在 D 盘。</p><h3 id="2- 已使用过的系统 - 维护模式"><a href="#2- 已使用过的系统 - 维护模式" class="headerlink" title="2. 已使用过的系统 - 维护模式"></a>2. 已使用过的系统 - 维护模式 </h3><p> 开机时按 <code>F8</code> 键，选择 <em>Repair your computer/ 维护模式</em> ，回车进入。连续点 <em>Next</em>/<em>OK</em> 两次后，选择 <em>Command Prompt</em> （命令提示符），然后执行以下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">## 复制 C:\Users 下的所有文件到 D:\Users</span><br><span class="line">## 参数说明：此命令为 Windows 的“强健文件拷贝”命令。</span><br><span class="line">##      /E 表示拷贝文件时包含子目录（包括空目录）</span><br><span class="line">##      /COPYALL 表示拷贝所有文件信息 </span><br><span class="line">##      /XJ 表示不包括 Junction points（默认是包括的）</span><br><span class="line">##      /XD "C:\Users\Administrator" 表示不包括指定的目录, 此处指定目录为："C:\Users\Administrator"</span><br><span class="line">robocopy "C:\Users" "D:\Users" /E /COPYALL /XJ /XD "C:\Users\Administrator"</span><br><span class="line">## 删除 C:\Users 文件夹 </span><br><span class="line">## 参数说明：此命令删除指定目录。</span><br><span class="line">##      /S 删除指定目录及其中的所有文件。用于删除目录树。</span><br><span class="line">##      /Q 安静模式。删除时不询问。  </span><br><span class="line"><span class="built_in">rmdir</span> "C:\Users" /S /Q   </span><br><span class="line">## 创建(目录) 软连接 C:\Users 指向 D:\Users</span><br><span class="line">## 参数说明：此命令创建符号连接。</span><br><span class="line">##      /J 连接类型为目录连接</span><br><span class="line">mklink /J "C:\Users" "D:\Users"</span><br></pre></td></tr></table></figure><p>执行完成后，重启系统即可生效。</p><h3 id="3- 已使用过的系统 - 超级管理员"><a href="#3- 已使用过的系统 - 超级管理员" class="headerlink" title="3. 已使用过的系统 - 超级管理员"></a>3. 已使用过的系统 - 超级管理员</h3><blockquote><p>使用超级管理员用户来操作，其前提是之前未使用过默认的超级管理员用户（即 Administrator），若之前直接使用超级管理员用户，则本方案无效。</p></blockquote><p>首先关闭所有应用程序，然后右键我的电脑 - 管理 - 系统工具 - 本地用户和组 - 用户，在右侧找到 Administrator 右键 - 属性，取消勾选 <em>账户已禁用</em> ，确定。</p><p>然后注销当前用户，以 Administrator 登录，打开命令提示符，执行以下命令：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy "C:\Users" "D:\Users" /E /COPYALL /XJ /XD "C:\Users\Administrator"</span><br></pre></td></tr></table></figure><p>注销 Administrator ，重新用你的用户名登录系统，而后跟上面启用超管账户类似，去禁用 Administrator。</p><p>然后以管理员身份打开一个 DOS 窗口，输入以下命令:</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rmdir</span> "C:\Users" /S /Q</span><br><span class="line">mklink /J "C:\Users" "D:\Users"</span><br></pre></td></tr></table></figure><p>最后重启电脑即可生效。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Tips </tag>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义任务栏按钮的宽度</title>
      <link href="/2020/07/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%8C%89%E9%92%AE%E7%9A%84%E5%AE%BD%E5%BA%A6/"/>
      <url>/2020/07/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%8C%89%E9%92%AE%E7%9A%84%E5%AE%BD%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p> 通过注册表修改任务栏中应用程序的图标宽度，以达到隐藏文字仅显示 ICON 的效果。</p><p> 私以为，在 Win7 上宽度值设为 <code>32</code> 最适合 <em>1366x768</em> 分辨率。</p><p> 将下列代码另存为 <code> 自定任务栏按钮宽度为 32.reg</code> ，再双击执行即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">; 修改任务栏中应用程序按钮的宽度，以达到隐藏文字仅显示 ICON 的效果 </span><br><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics]</span><br><span class="line">; Win7 上，值设为 32 最适合 1366x768 分辨率 </span><br><span class="line">&quot;MinWidth&quot;&#x3D;&quot;32&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Tips </tag>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置任务栏按钮：从不合并，隐藏标签</title>
      <link href="/2020/07/15/%E8%AE%BE%E7%BD%AE%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%8C%89%E9%92%AE%EF%BC%9A%E4%BB%8E%E4%B8%8D%E5%90%88%E5%B9%B6%EF%BC%8C%E9%9A%90%E8%97%8F%E6%A0%87%E7%AD%BE/"/>
      <url>/2020/07/15/%E8%AE%BE%E7%BD%AE%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%8C%89%E9%92%AE%EF%BC%9A%E4%BB%8E%E4%B8%8D%E5%90%88%E5%B9%B6%EF%BC%8C%E9%9A%90%E8%97%8F%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<p>Windows 任务栏按钮设置为合并后可以隐藏文字，但合并后切换窗口的成本大为增加；但不合并的话，又会显示窗口标题，也不舒服。微软就是不提供一个“从不合并，隐藏标签”的选项，今天我们就来实现它。<br>本文仅用于强迫症患者。</p><a id="more"></a><blockquote><p>本文为翻译，适当做了些意译，根据东西思维差异作出一定改动。<br>原文：<a href="https://gist.github.com/blole/428d67218642379489fe" target="_blank" rel="noopener">Make win10 taskbar buttons Never combine, hide labels</a></p></blockquote><blockquote><p>本文仅论述 Windows10 系统下的情况</p></blockquote><p>微软官方在 <code> 设置 </code>-&gt;<code> 个性化 </code>-&gt;<code> 任务栏 </code> 页面的下拉菜单 <code> 合并任务栏按钮 </code> 中并未提供 <code> 从不合并，隐藏标签 </code> 选项，而是提供了以下 3 个选项：</p><table><thead><tr><th>可用选项</th><th align="center">注册表值</th><th align="center">hide bit</th><th align="center">combine bit</th></tr></thead><tbody><tr><td>始终合并按钮</td><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td>任务栏已满时</td><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td>从不</td><td align="center">2</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><blockquote><p>译者注：为便于理解，两个表头未予翻译，下同。若实难理解，可参考：hide bit = 隐藏（控制）位、combine bit = 合并（控制）位。<br>也可通过右键单击任务栏并选择 <code>任务栏设置 </code> 来访问 <code> 合并任务栏按钮</code></p></blockquote><p><img src="1.png" alt="▲ 始终合并按钮"></p><p><img src="2.png" alt="▲ 从不"></p><p>通过选择该下拉菜单的选项，将会修改以下注册表项（修改值参考上表）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\TaskbarGlomLevel</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\MMTaskbarGlomLevel</span><br></pre></td></tr></table></figure><p>前者控制主显示器上的任务栏，后者控制所有其它显示器上的任务栏。</p><blockquote><p>译者注：单显示器用户看第一个就好</p></blockquote><p>这些注册表值随后会被 <em>explorer.exe</em> 进程读取并转换为 <code>hide bit</code> 和 <code>combine bit</code> 。负责该转换的函数如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">0x7FF69EA67590:</span><br><span class="line">explorer.exe+57590 - 48 89 5C 24 08        - mov [rsp+08],rbx</span><br><span class="line">explorer.exe+57595 - 57                    - push rdi</span><br><span class="line">explorer.exe+57596 - 48 83 EC 20           - sub rsp,20</span><br><span class="line">explorer.exe+5759A - 48 8B F9              - mov rdi,rcx</span><br><span class="line">explorer.exe+5759D - 33 DB                 - xor ebx,ebx</span><br><span class="line">explorer.exe+5759F - B9 56000040           - mov ecx,40000056</span><br><span class="line">explorer.exe+575A4 - FF 15 7E011700        - call qword ptr [explorer.exe+1C7728]</span><br><span class="line">explorer.exe+575AA - 85 C0                 - test eax,eax</span><br><span class="line">explorer.exe+575AC - 75 32                 - jne explorer.exe+575E0</span><br><span class="line">explorer.exe+575AE - 4C 8D 4C 24 38        - lea r9,[rsp+38]</span><br><span class="line">explorer.exe+575B3 - 89 5C 24 38           - mov [rsp+38],ebx</span><br><span class="line">explorer.exe+575B7 - 4C 8B C7              - mov r8,rdi</span><br><span class="line">explorer.exe+575BA - 48 8D 15 3F671700     - lea rdx,[explorer.exe+1CDD00]</span><br><span class="line">explorer.exe+575C1 - 48 C7 C1 01000080     - mov rcx,80000001</span><br><span class="line">explorer.exe+575C8 - E8 5BDAFBFF           - call explorer.exe+15028</span><br><span class="line">explorer.exe+575CD - 8B 44 24 38           - mov eax,[rsp+38]</span><br><span class="line">explorer.exe+575D1 - 83 E8 01              - sub eax,01</span><br><span class="line">explorer.exe+575D4 - 74 17                 - je explorer.exe+575ED</span><br><span class="line">explorer.exe+575D6 - 83 F8 01              - cmp eax,01</span><br><span class="line">explorer.exe+575D9 - 74 05                 - je explorer.exe+575E0</span><br><span class="line">explorer.exe+575DB - BB 03000000           - mov ebx,00000003</span><br><span class="line">explorer.exe+575E0 - 8B C3                 - mov eax,ebx</span><br><span class="line">explorer.exe+575E2 - 48 8B 5C 24 30        - mov rbx,[rsp+30]</span><br><span class="line">explorer.exe+575E7 - 48 83 C4 20           - add rsp,20</span><br><span class="line">explorer.exe+575EB - 5F                    - pop rdi</span><br><span class="line">explorer.exe+575EC - C3                    - ret </span><br><span class="line">explorer.exe+575ED - BB 01000000           - mov ebx,00000001</span><br><span class="line">explorer.exe+575F2 - EB EC                 - jmp explorer.exe+575E0</span><br></pre></td></tr></table></figure><p>我们的需求是 <code>从不合并，隐藏标签 </code> ，一种实现方法是修改下拉菜单 <code> 合并任务栏按钮</code> 中某一现有选项的 <code>hide bit</code> 和 <code>combine bit</code> ，这是我目前的选择。</p><p>将指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explorer.exe+575ED - BB 01000000           - mov ebx,00000001</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explorer.exe+575ED - BB 02000000           - mov ebx,00000002</span><br></pre></td></tr></table></figure><p>这一操作会使下拉菜单 <code>合并任务栏按钮 </code> 中 <code> 任务栏已满时 </code> 选项的实际功能变更为 <code> 从不合并，隐藏标签 </code> 功能。<br><br><br><br><br> 可实现 <code>从不合并，隐藏标签</code> 的第三方工具：<a href="http://rammichael.com/7-taskbar-tweaker" target="_blank" rel="noopener">7+ Taskbar Tweaker</a> （官方支持中文）</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Tips </tag>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cron 简明语法</title>
      <link href="/2020/07/11/Cron%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/07/11/Cron%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="# 前言" class="headerlink" title="前言"></a>前言 </h2><p> 通过 <code>cron 表达式</code> 可以让计算机在 <strong> 固定的时间点 </strong> 或<strong>特定时间间隔 </strong> 下执行指定任务。时间间隔的单位可以是秒 <sup>*</sup>、分钟、小时、日、月、周、年的<strong> 任意组合 </strong>。非常适合周期性的日志、数据分析或数据备份等运维或管理工作。cron 该词来源于希腊语 chronos（χρόνος），原意是时间。<br><font color=#aaaaaa size=2> 注意：crontab 最小单位是分钟，Quartz 最小时间单位是秒。</font></p><h2 id="语法规则"><a href="# 语法规则" class="headerlink" title="语法规则"></a>语法规则 </h2><p><code>cron 表达式</code> 是一个字符串，该字符串分为 <strong>7</strong> 个<strong><code>域 </code></strong>，相邻的两个域由一个<code>space</code> 隔开。最后一个 <code> 域</code>（年）<strong>可省略 </strong>，实际应用中多为前 6 个<code> 域</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; 秒 &#125; &#123; 分 &#125; &#123; 时 &#125; &#123; 日 &#125; &#123; 月 &#125; &#123; 周 &#125; &#123; 年 &#125;</span><br><span class="line">&#123;Seconds&#125; &#123;Minutes&#125; &#123;Hours&#125; &#123;DayofMonth&#125; &#123;Month&#125; &#123;DayofWeek&#125; &#123;Year&#125;</span><br></pre></td></tr></table></figure><p><font color=#aaaaaa size=2>注意：当「周」域为「*」时，容易错误理解为每周，但周是时间段而不是时间点，显然理解有误。实际上应理解作当前周的每一天，即「每天」。其实结合其英文原文「DayofWeek」还是很好理解的。这里我找不到更合适和贴切的翻译，就仍译作「周」。</font></p><h3 id="各域规则"><a href="# 各域规则" class="headerlink" title="各域规则"></a>各域规则</h3><table><thead><tr><th>域</th><th align="center">是否必填</th><th>取值范围</th><th>通配符</th></tr></thead><tbody><tr><td>秒</td><td align="center">是</td><td>0-59</td><td>, - * /</td></tr><tr><td>分</td><td align="center">是</td><td>0-59</td><td>, - * /</td></tr><tr><td>时</td><td align="center">是</td><td>0-23</td><td>, - * /</td></tr><tr><td>日</td><td align="center">是</td><td>1-31</td><td>, - * / ? L W C</td></tr><tr><td>时</td><td align="center">是</td><td>1-12 或 JAN-DEC</td><td>, - * /</td></tr><tr><td>周</td><td align="center">是</td><td>1-7 或 SUN-SAT</td><td>, - * / ? L C #</td></tr><tr><td>年</td><td align="center">否</td><td>1970-2099</td><td>, - * /</td></tr></tbody></table><h3 id="特殊的表达式"><a href="# 特殊的表达式" class="headerlink" title="特殊的表达式"></a>特殊的表达式</h3><table><thead><tr><th>特殊表达式</th><th>含义</th><th>等价一般表达式</th></tr></thead><tbody><tr><td>@reboot</td><td>启动时触发一次</td><td>无</td></tr><tr><td>@yearly</td><td>每年运行一次</td><td>0 0 0 1 1 ? *</td></tr><tr><td>@annually</td><td>（同 @yearly）</td><td>（同上）</td></tr><tr><td>@monthly</td><td>每月触发一次</td><td>0 0 0 1 * *</td></tr><tr><td>@weekly</td><td>每周触发一次</td><td>0 0 0 * * 1</td></tr><tr><td>@daily</td><td>每日触发一次</td><td>0 0 0 * * ?</td></tr><tr><td>@midnight</td><td>（同 @daily）</td><td>（同上）</td></tr><tr><td>@hourly</td><td>每小时触发一次</td><td>0 0 * * * ?</td></tr></tbody></table><h3 id="域的通配符"><a href="# 域的通配符" class="headerlink" title="域的通配符"></a>域的通配符 </h3><p> 通配符表达一些特殊含义，下列各通配符的中文释义是按照我理解及参考文献后个人定义的。<br><font color=#aaaaaa size=2>注意：cron 表达式对字母大小写不敏感。</font></p><ul><li><p><code>,</code> 逗号，表 <strong> 列表值</strong>，类比数组的各元素，是并列关系。</p><ul><li><p><code>0 0 0 9,15 * ?</code><br>（每月的）9 号和 15 号的 00:00:00 各触发一次。</p></li><li><p><code>0 0,15,30,45 * * * ?</code><br>（每月的每天的）每小时的 0 分、15 分、30 分、45 分（的 0 秒）各触发一次，即每 15 分钟触发一次。</p></li></ul></li></ul><ul><li><p><code>-</code> 中划线，表 <strong> 连续区间值</strong>，指定区间内所有可能的值均可触发。</p><ul><li><p><code>0 0 9-13 * * ?</code><br>（每月的）每天的 09:00-13:00 期间，每小时（的 0 分 0 秒）触发一次。等价于<code>0 0 9,10,11,12,13 * * ?</code>。</p></li><li><p><code>0 15 10 ? * 6L 2011-2014</code><br>Fire at 10:15 a.m. on every last Friday of every month during the years 2011, 20012, 2014, and 2014</p></li></ul></li></ul><ul><li><p><code>*</code> 星号，表 <strong> 任意值</strong>，取值范围内任意可能的值。</p><ul><li><p><code>* * * * * ?</code><br>（每月的每天的每小时的每分的）每秒触发一次。</p></li><li><p><code>0 0 0 * * ?</code><br>（每月的）每天的 00:00:00 触发一次。</p></li></ul></li></ul><ul><li><p><code>/</code> 斜杠，表 <strong> 周期值</strong>，根据指定起始时间点和周期，间歇性触发。</p><ul><li><p><code>0 0 */6 * * ?</code><br>从 00:00:00 开始，每 6 小时触发一次。等价于<code>0 0 0,6,12,18 * * ?</code>。</p></li><li><p><code>11/10 * * * * ?</code><br>（每月的每天的每小时内，）从每分钟的第 11 秒开始，每 10 秒触发一次。等价于<code>11,21,31,41,51 * * * * ?</code>。</p></li></ul></li></ul><ul><li><p><code>?</code> 问号，表 <strong> 未指定的值</strong>，即不关心它为何值。如果「日」或「周」域都指定数值容易冲突，即使不冲突也会重复指定，故常仅指定其一（都指定时以范围更精确的为准）。</p><ul><li><p><code>0 0 13 * * ?</code><br>（每月的）每天的 13:00:00 触发一次。</p></li><li><p><code>0 0 13 ? * *</code><br>（每月的）每天的 13:00:00 触发一次。</p></li></ul></li></ul><ul><li><p><code>L</code> 字母 L（Last），表 <strong> 最后一个值 </strong>，只能在「日」和「周」域中使用。在「日」域中时，表<strong> 当月的最后一天 </strong>；在「周」域中时，表<strong> 当周最后一天 </strong>（周六），等同于<code>7</code> 或<code>SAT</code>；若在「L」前加指定数字，则表示 <strong> 最后一个指定日 </strong>，如在「周」域设置<code>4L</code> 表本月最后一个周三。</p><ul><li><p><code>0 0 13 L * ?</code><br>每月的最后一天的 13:00:00 触发一次。</p></li><li><p><code>0 0 13 ? * L</code><br>（每月的）每周的最后一天（即周六）的 13:00:00 触发一次。</p></li><li><p><code>0 0 13 ? * 4L</code><br>（每月的）最后一个周三的 13:00:00 触发一次。</p></li></ul></li></ul><ul><li><code>W</code> 字母 W（Weekday），表 <strong> 最接近指定日的工作日 </strong>（周一至周五），只能在「日」域中使用。此用法<strong> 只在当前月内计算，不会超出本月范围 </strong>。如本月最后一天是 31 日（周天），那么<code>31W</code> 表示当月的 29 日（周五）。也可用 <code>LW</code> 来指定当前月的最后一个工作日。<ul><li><code>0 0 13 15W * ?</code><ul><li>假设 15 日是周一，表示（每月的）15 日的 13:00:00 触发一次。</li><li>假设 15 日是周六，表示（每月的）14 日的 13:00:00 触发一次。</li><li>假设 15 日是周天，表示（每月的）16 日的 13:00:00 触发一次。</li></ul></li></ul></li></ul><ul><li><p><code>C</code> 字母 C（Calendar），表 <strong> 和 Calendar 联系后计算过的值</strong>，只能在「日」或「周」域中使用。</p><ul><li><p><code>0 0 0 5C * ?</code><br>网上没找到结合实例的解释，没搞懂。遇上再说。</p></li><li><p><code>0 0 0 ? * 5C</code><br>网上没找到结合实例的解释，没搞懂。遇上再说。</p></li></ul></li></ul><ul><li><p><code>#</code> 井号，<code>a#b</code>表 <strong> 每月的第 b 个周(a-1)</strong>，只能在「周」域中使用。</p><ul><li><p><code>0 0 0 ? * 1#3</code><br>每月的第 3 个周天的 00:00:00 触发。</p></li><li><p><code>0 0 0 ? * 3#2</code><br>每月的第 2 个周二的 00:00:00 触发。</p></li></ul></li></ul><h2 id="综合实例"><a href="# 综合实例" class="headerlink" title="综合实例"></a>综合实例</h2><ul><li><p><code>0 */1 * * * ?</code><br>每隔 1 分钟触发一次</p></li><li><p><code>0 0/1 * * * ?</code><br>每隔 1 分钟触发一次</p></li><li><p><code>0 0 22 * * ?</code><br>每天 22:00:00 触发一次</p></li><li><p><code>0 0 22 ? * *</code><br>每天 22:00:00 触发一次</p></li><li><p><code>0 0 3 * * ? 2020</code><br>2020 年的每天的 03:00:00 触发一次</p></li><li><p><code>0 0 3 ? * 6L 2019-2021</code><br>2019 年至 2021 年的每月的最后一个周五的 03:00:00 触发一次</p></li><li><p><code>0 0-5 14 * * ?</code><br>每天 14:00 至 14:05 期间每分钟触发一次</p></li><li><p><code>0 0 13 ? 3 WED</code><br>每年 3 月的每个周三的 13:00:00 触发一次</p></li><li><p><code>0 0 13 ? 3 WED-SAT</code><br>每年 3 月的每周的周三、周四、周五、周六的 13:00:00 触发一次</p></li><li><p><code>0 0 1 1 * ?</code><br>每月 1 号的 01:00:00 触发一次</p></li><li><p><code>0 0 23 L * ?</code><br>每月最后一天的 23:00:00 触发一次</p></li><li><p><code>0 0 3 ? * L</code><br>每周周六的 03:00:00 触发一次</p></li><li><p><code>0 0 3 ? * 6L</code><br>每月的最后一个周五的 03:00:00 触发一次</p></li><li><p><code>0 24,30 * * * ?</code><br>每小时的 24 分和 30 分各触发一次</p></li><li><p><code>0 0 3 ? * 6#3</code><br>每月的第 3 个周五的 03:00:00 触发一次</p></li></ul><h2 id="cron- 表达式生成器"><a href="#cron- 表达式生成器" class="headerlink" title="cron 表达式生成器"></a>cron 表达式生成器</h2><p><a href="https://cron.qqe2.com/" target="_blank" rel="noopener">https://cron.qqe2.com/</a></p><h2 id="参考文献"><a href="# 参考文献" class="headerlink" title="参考文献"></a>参考文献 </h2><p>[1] 码农小胖哥. 详解定时任务中的 cron 表达式[EB/OL].<a href="https://juejin.im/post/6844904047237955592" target="_blank" rel="noopener">https://juejin.im/post/6844904047237955592,2020-01-14</a>,2020-01-14.<br>[2]Ruthless.cron 表达式详解[EB/OL].<a href="https://www.cnblogs.com/linjiqin/p/3178452.html" target="_blank" rel="noopener">https://www.cnblogs.com/linjiqin/p/3178452.html</a>,2013-07-08.<br>[3]MicroFocus.UnderstandingCronSyntaxInTheJobScheduler[EB/OL].<a href="https://www.netiq.com/documentation/cloud-manager-2-5/ncm-reference/data/bexyssf.html" target="_blank" rel="noopener">https://www.netiq.com/documentation/cloud-manager-2-5/ncm-reference/data/bexyssf.html</a>,.</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义 SSH 登录前提示信息</title>
      <link href="/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E7%99%BB%E5%BD%95%E5%89%8D%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E7%99%BB%E5%BD%95%E5%89%8D%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p><img src="1.png" alt="▲ SSH 登录前提示信息"></p><p> 修改 <code>/etc/ssh/sshd_config</code> ，找到 <code># Banner</code> ，新增一行或解开注释，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Banner &#x2F;etc&#x2F;ssh&#x2F;banner</span><br></pre></td></tr></table></figure><p> 随后创建文件 <code>/etc/ssh/banner</code> ，自定义所需内容即可，也可参考当前目录下 <code>banner</code> 。</p><p> 最后执行以下命令即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><p> 或 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><p> 附上自己的 <a href="banner">banner</a> 作为例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#####################################################################</span><br><span class="line">#                     Welcome to SDokio.cn                          #</span><br><span class="line">#                                                                   #</span><br><span class="line">#           All connections are monitored and recorded              #</span><br><span class="line">#     Disconnect IMMEDIATELY if you are not an authorized user!     #</span><br><span class="line">#####################################################################</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义 SSH 登录后提示信息</title>
      <link href="/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E7%99%BB%E5%BD%95%E5%90%8E%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E7%99%BB%E5%BD%95%E5%90%8E%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>CentOS 平台上有个简单的小功能：MOTD（Message of the day），可时用户登录 SSH 时原样输出用户指定内容。<br> 例如修改 <code>/etc/motd</code> 为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> 欢迎回来~</span><br></pre></td></tr></table></figure><p> 则下次登录成功后会打印：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@11.22.33.44&#39;s password:</span><br><span class="line">Last login: Fri Jul 13 05:29:14 2018 from 111.175.59.239</span><br><span class="line"> 欢迎回来~</span><br><span class="line">[17:47:46 root@soyadokio ~]#</span><br></pre></td></tr></table></figure><p> 说明：上面是原样输出，可如果需要动态内容，就需要用到自启动命令打印内容来模拟 MOTD 的效果。</p><p> 操作：新建 <code>/etc/profile.d/motd.sh</code> ，内容为当前目录下 <code>motd.sh</code> 的内容，则可达成如下效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@11.22.33.44&#39;s password:</span><br><span class="line">Last login: Fri Jul 13 05:29:14 2018 from 111.175.59.239</span><br><span class="line">111.175.59.239 -&gt; Wuhan, Hubei, China</span><br><span class="line">Hostname:   soyadokio.com (11.22.33.44)</span><br><span class="line">Processes:  43</span><br><span class="line">Uptime:     1 days, 16 hours, 59 minutes</span><br><span class="line">CPU load:   0.05 0.02 0.00</span><br><span class="line">Memo usage: 14.72% of 512.00MB</span><br><span class="line">Users logged in: 1</span><br><span class="line">[17:47:46 root@soyadokio ~]#</span><br></pre></td></tr></table></figure><p> 注意：本脚本需 <code>jq</code> 支持，安装可执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y jq</span><br></pre></td></tr></table></figure><p> 附上自己的 <a href="motd.sh">motd.sh</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">b=`tput bold`</span><br><span class="line">n=`tput sgr0`</span><br><span class="line">c=`tput setaf 2`</span><br><span class="line">c2=`tput setaf 4`</span><br><span class="line">lastip=`last | awk <span class="string">'NR==1&#123;print&#125;'</span> | sed <span class="string">"s/.*\s\(\([0-9]\&#123;1,3\&#125;\.\)\&#123;3\&#125;[0-9]\&#123;1,3\&#125;\)\s.*/\1/g"</span>`</span><br><span class="line">json=`timeout 1 curl -s http://ip-api.com/json/<span class="variable">$lastip</span>`</span><br><span class="line"><span class="keyword">if</span> [[`<span class="built_in">echo</span> <span class="variable">$json</span> | grep -P <span class="string">"^\&#123;.*\&#125;$"</span>` ]]; <span class="keyword">then</span></span><br><span class="line">    status=`<span class="built_in">echo</span> <span class="variable">$json</span> | jq -r <span class="string">".status"</span>`</span><br><span class="line">    <span class="keyword">if</span> [<span class="variable">$status</span> == <span class="string">"success"</span> ]; <span class="keyword">then</span></span><br><span class="line">        city=`<span class="built_in">echo</span> <span class="variable">$json</span> | jq -r <span class="string">".city"</span>`</span><br><span class="line">        regionName=`<span class="built_in">echo</span> <span class="variable">$json</span> | jq -r <span class="string">".regionName"</span>`</span><br><span class="line">        country=`<span class="built_in">echo</span> <span class="variable">$json</span> | jq -r <span class="string">".country"</span>`</span><br><span class="line">        geolocation=`<span class="built_in">echo</span> -e <span class="string">"<span class="variable">$city</span>, <span class="variable">$regionName</span>, <span class="variable">$country</span>"</span>`</span><br><span class="line">        <span class="keyword">if</span> [<span class="variable">$country</span> == <span class="string">"China"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$lastip</span> -&gt; <span class="variable">$geolocation</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$lastip</span> -&gt; <span class="variable">$c2</span><span class="variable">$geolocation</span><span class="variable">$n</span>"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[`ifconfig | grep -P <span class="string">"inet addr:"</span>` ]]; <span class="keyword">then</span> <span class="comment"># CentOS6/Debian</span></span><br><span class="line">    ips=`ifconfig | awk <span class="string">'/inet addr/ &#123;gsub("addr:","", $2); print $2&#125;'</span>`</span><br><span class="line">    <span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$ips</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [[`<span class="built_in">echo</span> <span class="variable">$ip</span> | grep -P <span class="string">"(\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;"</span>` ]]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [[`<span class="built_in">echo</span> <span class="variable">$ip</span> | grep -P <span class="string">"^127.0.0.1$"</span>` ]]; <span class="keyword">then</span></span><br><span class="line">                :</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$&#123;b&#125;</span><span class="variable">$&#123;c&#125;</span>Hostname<span class="variable">$&#123;n&#125;</span>:   `hostname` (<span class="variable">$ip</span>)"</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            :</span><br><span class="line"><span class="comment">#            echo"Invalid IP format"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">elif</span> [[`ifconfig | grep -P <span class="string">"inet:"</span>` ]]; <span class="keyword">then</span> <span class="comment"># CentOS7</span></span><br><span class="line"><span class="comment">#    echo"don't support CentOS 7"</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$&#123;b&#125;</span><span class="variable">$&#123;c&#125;</span>Hostname<span class="variable">$&#123;n&#125;</span>:   `hostname`"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#    echo "don't know type of ifconfig"</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"<span class="variable">$&#123;b&#125;</span><span class="variable">$&#123;c&#125;</span>Hostname<span class="variable">$&#123;n&#125;</span>:   `hostname`"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$b</span><span class="variable">$&#123;c&#125;</span>Processes<span class="variable">$n</span>:  `cat /proc/loadavg | cut -d"</span>/<span class="string">" -f2| cut -d"</span> <span class="string">" -f1`"</span></span><br><span class="line">upt=`uptime | awk -F<span class="string">'(|,|:)+'</span> <span class="string">'&#123;if ($7=="min") m=$6; else &#123;if ($7~/^day/) &#123;d=$6;h=$8;m=$9&#125; else &#123;h=$6;m=$7&#125;&#125;&#125; &#123;print d+0,"days,",h+0,"hours,",m+0,"minutes"&#125;'</span>`</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$b</span><span class="variable">$&#123;c&#125;</span>Uptime<span class="variable">$n</span>:     <span class="variable">$upt</span>"</span></span><br><span class="line">mf=`cat /proc/meminfo | grep MemFree | awk &#123;<span class="string">'print int($2)'</span>&#125;` <span class="comment"># memory free</span></span><br><span class="line">mt=`cat /proc/meminfo | grep MemTotal | awk &#123;<span class="string">'print int($2)'</span>&#125;` <span class="comment"># memory total</span></span><br><span class="line">mu=$[mt-mf] <span class="comment"># memory used</span></span><br><span class="line">musage=`awk <span class="string">'BEGIN&#123;printf "%.2f\n",('</span><span class="variable">$mu</span><span class="string">'/'</span><span class="variable">$mt</span><span class="string">'*100)&#125;'</span>` <span class="comment"># memory usage</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$b</span><span class="variable">$&#123;c&#125;</span>CPU load<span class="variable">$n</span>:   `cat /proc/loadavg | cut -d"</span> <span class="string">" -f1-3`"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$b</span><span class="variable">$&#123;c&#125;</span>Memo usage<span class="variable">$n</span>: <span class="variable">$&#123;musage&#125;</span>% of `awk 'BEGIN&#123;printf"</span>%.2f\n<span class="string">",('<span class="variable">$mt</span>'/1024)&#125;'`MB"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$b</span><span class="variable">$&#123;c&#125;</span>Users logged in<span class="variable">$n</span>: `w | tail -n +3 | wc -l`"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义 SSH 默认断开时间</title>
      <link href="/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E9%BB%98%E8%AE%A4%E6%96%AD%E5%BC%80%E6%97%B6%E9%97%B4/"/>
      <url>/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89SSH%E9%BB%98%E8%AE%A4%E6%96%AD%E5%BC%80%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>SSH 默认的断开时间只有几分钟，往往造成不便，本文将介绍修改 SSH 配置或参数以保持其处于长期在线状态。这里分为两类：<strong>长效设置 </strong> 和<strong>单次有效 </strong>。其中长效设置分两种思路：<strong> 服务器主动保持连接 </strong> 和<strong>客户端主动保持连接</strong>。</p><h2 id="长效设置"><a href="# 长效设置" class="headerlink" title="长效设置"></a>长效设置 </h2><h3 id="方案一：服务器主动保持连接"><a href="# 方案一：服务器主动保持连接" class="headerlink" title="方案一：服务器主动保持连接"></a> 方案一：服务器主动保持连接 </h3><p> 编辑 <code>/etc/ssh/sshd_config</code> ，添加如下两句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务器向客户端发送空数据包的时间间隔，单位：秒</span></span><br><span class="line">ClientAliveInterval 120</span><br><span class="line"><span class="comment"># 服务器向客户端发送空数据包的最大次数，120 秒 / 次 * 720 次 = 24 小时</span></span><br><span class="line">ClientAliveCountMax 720</span><br></pre></td></tr></table></figure><p>然后重启 <code>sshd</code> 服务即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><p>这样设置即可使 SSH 的自动断开间隔调整为 24 小时左右。</p><h3 id="方案二：客户端主动保持连接"><a href="# 方案二：客户端主动保持连接" class="headerlink" title="方案二：客户端主动保持连接"></a>方案二：客户端主动保持连接 </h3><p> 编辑 <code>/etc/ssh/ssh_config</code> ，添加如下两句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 客户端向服务器发送空数据包的时间间隔，单位：秒</span></span><br><span class="line">ServerAliveInterval 120</span><br><span class="line"><span class="comment"># 客户端向服务器发送空数据包的最大次数，120 秒 / 次 * 720 次 = 24 小时</span></span><br><span class="line">ServerAliveCountMax 720</span><br></pre></td></tr></table></figure><p>注意，这里是 <strong>*Server</strong>AliveInterval* 和 <strong>*Server</strong>AliveCountMax*</p><h2 id="单次有效"><a href="# 单次有效" class="headerlink" title="单次有效"></a>单次有效 </h2><h3 id="方案三：带参连接"><a href="# 方案三：带参连接" class="headerlink" title="方案三：带参连接"></a> 方案三：带参连接 </h3><p> 使用 SSH 命令时，可以增加 <em>ServerAliveInterval</em> 参数设置心跳时间，比如设置每隔 120 秒发送一次心跳包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o ServerAliveInterval=60 root@xx.xx.xx.xx</span><br></pre></td></tr></table></figure><p>有效期：本次登录期间。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义 prompt 样式</title>
      <link href="/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89prompt%E6%A0%B7%E5%BC%8F/"/>
      <url>/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89prompt%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><img src="1.png" alt="▲ 黑色背景以外的所有东西组合起来叫 prompt"></p><p>自定义 Bash Prompt 时，作用域分为 <strong> 仅当前用户 </strong> 和<strong>全部用户</strong></p><h2 id="实现"><a href="# 实现" class="headerlink" title="实现"></a>实现 </h2><h3 id="仅当前用户有效"><a href="# 仅当前用户有效" class="headerlink" title="仅当前用户有效"></a> 仅当前用户有效 </h3><p> 编辑<code>~/.bashrc</code>，并在该行 <em># User specific aliases and functions</em> 以下添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PS1=<span class="string">"[\[\e[32m\]\t \u@\H \[\e[32;7m\]\W\[\e[m\]]\$"</span></span><br></pre></td></tr></table></figure><p>然后执行以下命令即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="全部用户有效"><a href="# 全部用户有效" class="headerlink" title="全部用户有效"></a>全部用户有效 </h3><p> 编辑<code>/etc/bashrc</code>，注释掉默认设置并添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ["$PS1" = "\\s-\\v\\\$"] &amp;&amp; PS1="[\u@\h \w]\\$"</span></span><br><span class="line">PS1=<span class="string">"[\[\e[32m\]\t \u@\H \[\e[32;7m\]\W\[\e[m\]]\$"</span></span><br></pre></td></tr></table></figure><p>然后执行以下命令即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure><h2 id="原理和背景知识"><a href="# 原理和背景知识" class="headerlink" title="原理和背景知识"></a>原理和背景知识 </h2><p> 文章一开头图片里那玩意儿英文定义叫 <em>prompt</em>，中文翻译是<em> 提示符 </em>，或者具体点叫<em> 终端提示符</em>。</p><p>Bash 有四个可以定制的 prompt:</p><ul><li><code>PS1</code> 是在每个命令前都显示的主要 prompt，大部分用户都是定制这个值。</li><li><code>PS2</code> 命令需要输入时的第二 prompt(比如多行命令).</li><li><code>PS3</code> 不常用，Bash 的内置 <code>select</code> 显示交互菜单时使用. 和其它 prompt 不一样，它不扩展 <em>Bash escape sequences</em>. 通常在使用包含 <code>select</code> 的脚本时会需要定制此 prompt。</li><li><code>PS4</code> 也不常用，在调试 <code>bash</code> 脚本时显示缩进级别。第一个字符的重复次数表示缩进级别。</li></ul><p>所有 prompt 都可以通过设置变量到需要的数值进行定义(通常在 <code>~/.bashrc</code>), 例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PS2=<span class="string">'&gt;'</span></span><br></pre></td></tr></table></figure><p>但常用的就只有 <code>PS1</code>，这里也只谈 <code>PS1</code>。<br>查看环境变量 <code>PS1</code> 默认值的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PS1</span></span><br></pre></td></tr></table></figure><h3 id="语法"><a href="# 语法" class="headerlink" title="语法"></a>语法</h3><p><img src="2.png" alt="▲ 用不同颜色给不同成份分组"></p><p>双引号之间的便是 prompt 的语法控制了，其又分为多个部分，已用不同颜色标注，这里挨个儿来讲：</p><h4 id="标黄部分"><a href="# 标黄部分" class="headerlink" title="标黄部分"></a>标黄部分 </h4><p><strong> 颜色 / 效果控制代码</strong>，语法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\e[&#123;F&#125;&#123;(;)B&#125;m</span><br></pre></td></tr></table></figure><p><code>\e</code> 固定写法，e 不区分大小写。</p><p><code>{F}</code> 表前景色（取值范围参考文末附录，下同），即字体颜色；<code>({;B})</code> 表后景色或后景效果，后景色即通常所说的背景色。圆括号表选填，不填后景色时默认后景颜色为无色、后景效果为 OFF，也就是没效果。<strong>前后景色书写顺序不区分先后，以分号隔开即可</strong>。</p><p><code>m</code> 固定写法。</p><p>具体解释：</p><p>第 1 段 <code>\e[32m</code> 表示字体颜色为绿色，作用域起始于该段代码之后，结束于下一段同类代码之前。</p><p>第 2 段 <code>\e[32;7m</code> 表示字体颜色为绿色，后景效果为 <em> 反白显示</em>。作用域起始于该段代码之后，结束于下一段同类代码之前。</p><p>注意：关于作用域，如果这里第 1 段和第 2 段反过来，即新第 1 段为 <code>\e[32;7m</code>，新第 2 段为 <code>\e[32m</code> 的话，新第 2 段的 <code>32</code> 只会结束新第 1 段的 <code>7</code>，但不会结束新第 1 段的 <code>32</code>，即 <strong> 前后景色的作用域控制是各自独立的，需要分别控制</strong>。</p><p>第 3 段 <code>\e[m</code> 是颜色 / 效果控制代码结束符。注意如果没这个的话，输入的命令也会被第 2 段的颜色 / 效果控制代码作用。</p><h4 id="红字蓝字部分"><a href="# 红字蓝字部分" class="headerlink" title="红字蓝字部分"></a>红字蓝字部分</h4><p><strong>Shell 转义字符序列</strong>，具体解释如下：</p><ul><li><code>\[</code> 标志着一个或多个非打印字符的开始。这被用来嵌入非打印的控制字符，这些字符以某种方式来操作终端仿真器，比方说移动光标或者是更改文本颜色</li><li><code>\]</code> 标志着非打印字符序列结束</li><li><code>\t</code> 表示 24 小时格式的时间，如：HH:MM:SS</li><li><code>\u</code> 表示当前用户的账号名称</li><li><code>\H</code> 表示完整的主机名称，如：ubuntu.ubuntu.com</li><li><code>\W</code> 表示当前工作目录名</li><li><code>\$</code> root 用户时显示一个 <code>$</code> 字符，普通用户时显示为一个 <code>#</code> 字符</li></ul><p>更多 Shell 转义字符序列参考下文附录</p><h4 id="其它部分"><a href="# 其它部分" class="headerlink" title="其它部分"></a>其它部分 </h4><p> 剩下的都好说，全部 <strong> 原样输出</strong>，比如中括号、at 符、空格</p><h3 id="附录"><a href="# 附录" class="headerlink" title="附录"></a>附录</h3><ol><li>前后景色 <strong> 颜色控制代码 </strong> 取值范围（注意同一颜色在前后景色中的代码不同）</li></ol><table><thead><tr><th align="center">前景</th><th align="center">后景</th><th align="left">颜色</th></tr></thead><tbody><tr><td align="center">30</td><td align="center">40</td><td align="left">黑色</td></tr><tr><td align="center">31</td><td align="center">41</td><td align="left">红色</td></tr><tr><td align="center">32</td><td align="center">42</td><td align="left">绿色</td></tr><tr><td align="center">33</td><td align="center">43</td><td align="left">黄色</td></tr><tr><td align="center">34</td><td align="center">44</td><td align="left">蓝色</td></tr><tr><td align="center">35</td><td align="center">45</td><td align="left">紫红色</td></tr><tr><td align="center">36</td><td align="center">46</td><td align="left">青蓝色</td></tr><tr><td align="center">37</td><td align="center">47</td><td align="left">白色</td></tr></tbody></table><ol start="2"><li>后景色 <strong> 效果控制代码 </strong> 取值范围</li></ol><table><thead><tr><th align="center">代码</th><th align="left">意义</th></tr></thead><tbody><tr><td align="center">0</td><td align="left">OFF</td></tr><tr><td align="center">1</td><td align="left">高亮显示</td></tr><tr><td align="center">4</td><td align="left">underline</td></tr><tr><td align="center">5</td><td align="left">闪烁</td></tr><tr><td align="center">7</td><td align="left">反白显示</td></tr><tr><td align="center">8</td><td align="left">不可见</td></tr></tbody></table><ol start="3"><li><strong>Shell 转义字符序列</strong></li></ol><table><thead><tr><th align="center">字符</th><th align="left">意义</th></tr></thead><tbody><tr><td align="center">\a</td><td align="left">以 ASCII 格式编码的铃声. 当遇到这个转义序列时, 计算机会发出嗡嗡的响声；</td></tr><tr><td align="center">\d</td><td align="left">以日，月，天格式来表示当前日期。例如，“Mon May 26”；</td></tr><tr><td align="center">\h</td><td align="left">本地机的主机名，但不带末尾的域名；</td></tr><tr><td align="center">\H</td><td align="left">完整的主机名；</td></tr><tr><td align="center">\j</td><td align="left">运行在当前 shell 会话中的工作数；</td></tr><tr><td align="center">\l</td><td align="left">当前终端设备名；</td></tr><tr><td align="center">\n</td><td align="left">一个换行符；</td></tr><tr><td align="center">\r</td><td align="left">一个回车符；</td></tr><tr><td align="center">\s</td><td align="left">shell 程序名；</td></tr><tr><td align="center">\t</td><td align="left">以 24 小时制，hours:minutes:seconds 的格式表示当前时间；</td></tr><tr><td align="center">\T</td><td align="left">以 12 小时制表示当前时间；</td></tr><tr><td align="center">\@</td><td align="left">以 12 小时制，AM/PM 格式来表示当前时间，例如“10:51 PM”；</td></tr><tr><td align="center">\A</td><td align="left">以 24 小时制，hours:minutes 格式表示当前时间；</td></tr><tr><td align="center">\u</td><td align="left">当前用户名；</td></tr><tr><td align="center">\v</td><td align="left">shell 程序的版本号，例如 4.3；</td></tr><tr><td align="center">\V</td><td align="left">shell 程序的版本号，例如 4.3.11；</td></tr><tr><td align="center">\w</td><td align="left">当前工作目录名；</td></tr><tr><td align="center">\W</td><td align="left">当前工作目录名的最后部分；</td></tr><tr><td align="center">\!</td><td align="left">当前命令的历史号；</td></tr><tr><td align="center">\#</td><td align="left">当前 shell 会话中的命令数；</td></tr><tr><td align="center">\$</td><td align="left">这会显示一个”$”字符，除非你拥有超级用户权限。在那种情况下， 它会显示一个”#”字符；</td></tr><tr><td align="center">\[</td><td align="left">标志着一系列一个或多个非打印字符的开始。这被用来嵌入非打印的控制字符，这些字符以某种方式来操作终端仿真器，比方说移动光标或者是更改文本颜色；</td></tr><tr><td align="center">\]</td><td align="left">标志着非打印字符序列结束；</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义命令 ls -l 回显的时间格式</title>
      <link href="/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4ls%20-l%E5%9B%9E%E6%98%BE%E7%9A%84%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F/"/>
      <url>/2020/06/12/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4ls%20-l%E5%9B%9E%E6%98%BE%E7%9A%84%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>修改 CentOS 中 <code>ls -l</code> 命令显示时间格式为<em>yyyy-MM-dd HH:mm:ss</em></p><p><img src="https://user-images.githubusercontent.com/16408325/84004829-c5ff6f00-a99e-11ea-9cc3-0d98776c71d4.png" alt="默认时间格式"><br>默认时间格式↑</p><p><img src="https://user-images.githubusercontent.com/16408325/84004834-c7309c00-a99e-11ea-8cb9-48fdce83c902.png" alt="改后时间格式"><br>改后时间格式↑</p><h2 id="操作指南"><a href="# 操作指南" class="headerlink" title="操作指南"></a>操作指南 </h2><h3 id="临时更改"><a href="# 临时更改" class="headerlink" title="临时更改"></a> 临时更改 </h3><p> 临时更改显示样式，当前会话有效，会话结束后恢复原来的样式。</p><p>直接执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TIME_STYLE=<span class="string">'+%Y-%m-%d %H:%M:%S'</span></span><br></pre></td></tr></table></figure><p>然后执行以下命令即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="永久更改"><a href="# 永久更改" class="headerlink" title="永久更改"></a>永久更改 </h3><p> 永久改变显示样式，当前会话结束、系统重启等操作之后，更改后的效果不受影响</p><p>编辑<code>/etc/profile</code>，在文件末尾添加内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TIME_STYLE=<span class="string">'+%Y-%m-%d %H:%M:%S'</span></span><br></pre></td></tr></table></figure><p>然后执行以下命令即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强迫症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinOS 内建程序启动命令汇总</title>
      <link href="/2015/12/29/WinOS%E5%86%85%E5%BB%BA%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
      <url>/2015/12/29/WinOS%E5%86%85%E5%BB%BA%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由本人于 2015-12-29 发表于 CSDN 博客。</p></blockquote><p><img src="001_yunxingkuang_001.png" alt="▲ 在运行框输入命令可快速启动对应程序"></p><p>以下全部命令已于 2020-09-18 在 <u>Win 10 x64 1909（OS 内部版本 18363.418）</u> 下全部 <strong> 测试通过</strong></p><table><thead><tr><th>序号</th><th>命令</th><th>打开的程序</th></tr></thead><tbody><tr><td>1</td><td><strong>calc</strong></td><td>计算器</td></tr><tr><td>2</td><td>certmgr.msc</td><td>证书</td></tr><tr><td>3</td><td>charmap</td><td>字符映射表</td></tr><tr><td>4</td><td>chkdsk</td><td>磁盘检查</td></tr><tr><td>5</td><td>cleanmgr</td><td>磁盘清理</td></tr><tr><td>6</td><td>cliconfg</td><td>SQL Server 客户端网络实用程序</td></tr><tr><td>7</td><td><strong>cmd</strong></td><td>CMD 命令提示符</td></tr><tr><td>8</td><td>compmgmt.msc</td><td>计算机管理</td></tr><tr><td>9</td><td>dcomcnfg</td><td>组件服务</td></tr><tr><td>10</td><td><strong>devmgmt.msc</strong></td><td>设备管理器</td></tr><tr><td>11</td><td><strong>diskmgmt.msc</strong></td><td>磁盘管理实用程序</td></tr><tr><td>12</td><td>dvdplay 或 mplayer2</td><td>Widnows Media Player</td></tr><tr><td>13</td><td>dxdiag</td><td>DirectX 诊断工具</td></tr><tr><td>14</td><td>eudcedit</td><td>专用字符编辑工具</td></tr><tr><td>15</td><td>eventvwr</td><td>事件查看器</td></tr><tr><td>16</td><td><strong>explorer</strong></td><td>资源管理器</td></tr><tr><td>17</td><td>fsmgmt.msc</td><td>共享文件夹管理器</td></tr><tr><td>18</td><td>gpedit.msc</td><td>本地组策略编辑器</td></tr><tr><td>19</td><td>iexpress</td><td>Iexpress Wizard</td></tr><tr><td>20</td><td>lusrmgr.msc</td><td>本地用户和组</td></tr><tr><td>21</td><td>magnify</td><td>放大镜</td></tr><tr><td>22</td><td>mmc</td><td>控制台</td></tr><tr><td>23</td><td>mobsync</td><td>同步中心</td></tr><tr><td>24</td><td><strong>msconfig</strong></td><td>系统配置</td></tr><tr><td>25</td><td><strong>mspaint</strong></td><td>画图板</td></tr><tr><td>26</td><td><strong>mstsc</strong></td><td>远程桌面连接</td></tr><tr><td>27</td><td>narrator</td><td>讲述人</td></tr><tr><td>28</td><td><strong>notepad</strong></td><td>打开记事本</td></tr><tr><td>29</td><td>odbcad32</td><td>ODBC 数据源管理程序</td></tr><tr><td>30</td><td>osk</td><td>打开屏幕键盘</td></tr><tr><td>31</td><td>perfmon.msc</td><td>性能监视器</td></tr><tr><td>32</td><td><strong>regedit</strong> 或 regedt32</td><td>注册表编辑器</td></tr><tr><td>33</td><td>rsop.msc</td><td>策略的结果集</td></tr><tr><td>34</td><td>secpol.msc</td><td>本地安全策略</td></tr><tr><td>35</td><td><strong>services.msc</strong></td><td>服务</td></tr><tr><td>36</td><td>shrpubw</td><td>创建共享文件夹</td></tr><tr><td>37</td><td>sigverif</td><td>文件签名验证</td></tr><tr><td>38</td><td><strong>taskmgr</strong></td><td>任务管理器</td></tr><tr><td>39</td><td>wiaacmgr</td><td>扫描仪和照相机向导</td></tr><tr><td>40</td><td>winver</td><td>检查 Windows 版本</td></tr><tr><td>41</td><td>wmimgmt.msc</td><td>Windows 管理体系结构(WMI)</td></tr><tr><td>42</td><td>write</td><td>写字板</td></tr><tr><td>43</td><td>wscript</td><td>windows 脚本宿主设置</td></tr></tbody></table><p><font color=#aaaaaa size=2>注意：加粗表示常用命令</font></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 运行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft IME 日语输入法用法小结</title>
      <link href="/2014/07/21/Microsoft-IME%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/"/>
      <url>/2014/07/21/Microsoft-IME%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由本人于 2014-07-21 发表于 QQ 空间。</p></blockquote><p>作为日语专业的学生，学习日语也有两年了。然而在使用微软自带的 IME 输入法时，经常会因为不会一些小操作而到处请教，一来二去也确实知道了几个。但是稍长时间不用，便马上又给忘得干干净净，于是便有了此文。</p><p>以下内容皆在 Windows 7 64 位操作系统上确认。</p><h2 id="常用快捷键"><a href="# 常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li><p><code>Alt</code>+<code>Shift</code>：中文 / 日文切换</p></li><li><p><code>Alt</code>+<code>~</code>：日文 /（半角）英文切换</p></li><li><p><code>Shift</code>+<code>CapsLock</code>：日文 /（全角）英文切换</p></li><li><p><code>Alt</code>+<code>CapsLock</code>：转换为片假名输入状态</p></li><li><p><code>Alt</code>+<code>CapsLock</code>：转换为平假名输入状态</p></li><li><p><code>F6</code>：（输入片假名后）转换为平假名</p></li><li><p><code>F7</code>：（输入平假名后）转换为片假名</p></li><li><p><code>F8</code>：（输入假名后）转换半角 / 全角 <font color=#aaaaaa size=2> 中文的半角 / 全角转换快捷键 <code>Ctrl</code>+<code>Space</code> 在输入日文时无效</font></p></li><li><p><code>F9</code>：（输入假名后）转换为全小写 / 全大写 / 首字母大写的全角英文</p></li><li><p><code>F10</code>：（输入假名后）转换为全小写 / 全大写 / 首字母大写的半角英文</p></li><li><p><code>Ctrl</code>+<code>F10</code>：输入法菜单</p></li><li><p><code>Shift</code>+<code>F10</code>：在输入假名并且出现下拉菜单后按此组合键可出现选择输入状态的菜单</p></li></ul><h2 id="生僻假名打法"><a href="# 生僻假名打法" class="headerlink" title="生僻假名打法"></a>生僻假名打法</h2><ol><li>输入两次后一个假名的罗马字发音的第一个辅音可打出 <code> っ</code>（促音）。<ul><li>「kitto」→「きっと」</li></ul></li></ol><ol start="2"><li>拗音的输入方法：<ul><li>「kya」→「きゃ」</li><li>「kyu」→「きゅ」</li></ul></li></ol><ol start="3"><li>输入两次「n」可打出 <code> ん</code>（拨音）。<ul><li>「nihonn」→「日本(にほん)」</li></ul></li></ol><ol start="4"><li>输入「l」或「x」后紧接着输入元音可得对应小写元音。<ul><li>「la/xa」→「ぁ」</li><li>「li/xi」→「ぃ」</li><li>「lu/xu」→「ぅ」</li><li>「le/xe」→「ぇ」</li><li>「lo/xo」→「ぉ」</li></ul></li></ol><ol start="5"><li>特殊用法<ul><li>「who/ulo/uxo」→「ウォ」</li><li>「thi/teli/texi」→「ティ」</li><li>「dhi/deli/dexi」→「ディ」</li><li>「vu/vyu」→「ヴ」</li><li>「vyu」→「ヴゅ」</li><li>「va/vya」→「ヴぁ」</li></ul></li></ol><h2 id="其它小技巧"><a href="# 其它小技巧" class="headerlink" title="其它小技巧"></a>其它小技巧</h2><ol><li><p>在 Microsoft 自带的日语输入法里，带有「IME Pad」，里面提供手写输入方式。在遇上不会拼的日语汉字时可用鼠标手写。只是鼠标写字简直一言难尽…<br><img src="003_xiaojiqiao_001.jpg" alt="▲ IME Pad"></p></li><li><p>有的时候打出假名后按 <code>Space</code> 键，发现假名自动分段不符合预期，此时可按下 <code>Shift</code>+<code>←</code> 或<code>Shift</code>+<code>→</code>手动控制假名分段位置。<br>例：输入「ここではきものをぬぐ」后按 <code>Space</code>，预期内容是「ここでは着(き) 物(もの)を脱 (ぬ) ぐ」，实际却出现「ここで履 (はき) 物(もの)を脱 (ぬ) ぐ」。这时候就可以 <strong> 按住 </strong><code>Shift</code> 同时按 1 次 <code>→</code> 键，然后再按一下<code>Space</code>，即可出现预期内容。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
